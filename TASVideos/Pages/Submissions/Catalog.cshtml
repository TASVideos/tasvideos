@page "{id}"
@model CatalogModel
@{
	ViewData["Title"] = $"Set Catalogging Information for #{Model.Catalog.Title}";
}

<div asp-validation-summary="ModelOnly" class="alert alert-danger alert-dismissible" role="alert"></div>
<form method="post">
	<row>
		<div class="col-lg-6">
			<form-group>
				<label asp-for="Catalog.SystemId" class="form-control-label"></label>
				<select asp-for="Catalog.SystemId" asp-items="@UiDefaults.DefaultEntry.Concat(Model.AvailableSystems)" class="form-control"></select>
			</form-group>
			<form-group>
				<label asp-for="Catalog.SystemFrameRateId" class="form-control-label"></label>
				<select asp-for="Catalog.SystemFrameRateId" asp-items="@UiDefaults.DefaultEntry.Concat(Model.AvailableSystemFrameRates)" class="form-control"></select>
			</form-group>
		</div>
		<div class="col-lg-6">
			<form-group>
				<fullrow>
					<label asp-for="Catalog.GameId" class="form-control-label"></label>
				</fullrow>
				<row>
					<div class="col-10">
						<select asp-for="Catalog.GameId" asp-items="@UiDefaults.DefaultEntry.Concat(Model.AvailableGames)" class="form-control"></select>
					</div>
					<div class="col-2">
						<button id="create-game" type="button" class="btn btn-primary">New</button>
					</div>
				</row>
			</form-group>
			<form-group>
				<fullrow>
					<label asp-for="Catalog.RomId" class="form-control-label"></label>
				</fullrow>
				<row>
					<div class="col-10">
						<select asp-for="Catalog.RomId" asp-items="@UiDefaults.DefaultEntry.Concat(Model.AvailableRoms)" class="form-control"></select>
					</div>
					<div class="col-2">
						<button 
							disable="!Model.Catalog.GameId.HasValue || Model.Catalog.GameId == -1" 
							id="create-rom" 
							type="button" 
							class="btn btn-primary">New</button>
					</div>
				</row>
			</form-group>
		</div>
	</row>
	<hr />
	<fullrow class="text-center">
		<button id="submit-btn" type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Update</button>
		<a class="btn btn-secondary" asp-page="View" asp-route-id="@Model.Id"><i class="fa fa-times"></i> Cancel</a>
	</fullrow>
</form>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}

	<script>
	{
		let systemModel = document.getElementById('@Html.IdFor(m => m.Catalog.SystemId)');
		let frameRateModel = document.getElementById('@Html.IdFor(m => m.Catalog.SystemFrameRateId)');
		let gameModel = document.getElementById('@Html.IdFor(m => m.Catalog.GameId)');
		let romModel = document.getElementById('@Html.IdFor(m => m.Catalog.RomId)');
		let createRomBtn = document.getElementById('create-rom');

		systemModel.onchange = function() {
			if (this.value) {
				let xmlhttp = new XMLHttpRequest();
				xmlhttp.onreadystatechange = function() {
					if (xmlhttp.readyState === XMLHttpRequest.DONE) {
						if (xmlhttp.status === 200) {
							gameModel.innerHTML = xmlhttp.responseText;
						}
					}
				};

				xmlhttp.open("GET", "/Games/List/GameDropDownForSystem?includeEmpty=true&systemId=" + systemModel.value, true);
				xmlhttp.send();

				let xmlhttp2 = new XMLHttpRequest();
				xmlhttp2.onreadystatechange = function() {
					if (xmlhttp2.readyState === XMLHttpRequest.DONE) {
						if (xmlhttp2.status === 200) {
							frameRateModel.innerHTML = xmlhttp2.responseText;
						}
					}
				};

				xmlhttp2.open("GET", "/Games/List/FrameRateDropDownForSystem?includeEmpty=true&systemId=" + systemModel.value, true);
				xmlhttp2.send();
			} else {
				Array.from(document.querySelectorAll('#@Html.IdFor(m => m.Catalog.GameId) option'))
					.forEach(element => {
						if (element.value) element.remove();
					});

				Array.from(document.querySelectorAll('#@Html.IdFor(m => m.Catalog.SystemFrameRateId) option'))
					.forEach(element => {
						if (element.value) element.remove();
					});
			}

			Array.from(document.querySelectorAll('#@Html.IdFor(m => m.Catalog.RomId) option'))
				.forEach(element => {
					if (element.value) element.remove();
				});
		}

		gameModel.onchange = function () {
			if (this.value) {
				createRomBtn.removeAttribute('disabled');
				createRomBtn.classList.remove('disabled');

				let xmlhttp = new XMLHttpRequest();
				xmlhttp.onreadystatechange = function() {
					if (xmlhttp.readyState === XMLHttpRequest.DONE) {
						if (xmlhttp.status === 200) {
							romModel.innerHTML = xmlhttp.responseText;
						}
					}
				};

				xmlhttp.open("GET", "/Games/List/RomDropDownForGame?includeEmpty=true&gameId=" + gameModel.value, true);
				xmlhttp.send();
			} else {
				createRomBtn.setAttribute('disabled', 'disabled');
				createRomBtn.classList.add('disabled');
				Array.from(document.querySelectorAll('#@Html.IdFor(m => m.Catalog.RomId) option'))
					.forEach(element => {
						if (element.value) element.remove();
					});
			}
		}

		document.getElementById('create-rom').onclick = function () {
			const gameId = document.getElementById('@Html.IdFor(m => m.Catalog.GameId)').value;
			document.location = '/Games/' + gameId + '/Roms/Edit?returnUrl=@HttpContext.Request.Path';
		}

		document.getElementById('create-game').onclick = function () {
			const systemId = document.getElementById('@Html.IdFor(m => m.Catalog.SystemId)').value;
			document.location = '/Games/Edit?returnUrl=@HttpContext.CurrentPathToReturnUrl()&systemId=' + systemId;
		}
	}
	</script>