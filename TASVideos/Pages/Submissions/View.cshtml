@page "{id}"
@inject IQueueService QueueService
@model ViewModel
@{
	ViewData.SetTitle($"{Model.Submission.Title} - Submission #{Model.Id}");
	ViewData.SetHeading($"Submission {Model.Submission.Title}");
	ViewData["NavigationId"] = Model.Id;
	ViewData["NavigationSuffix"] = "S";
	bool hasEncode = !string.IsNullOrWhiteSpace(Model.Submission.EncodeEmbedLink);
	bool canEdit = ViewData.UserHas(PermissionTo.EditSubmissions)
		|| (Model.CanEdit && ViewData.UserHas(PermissionTo.SubmitMovies));
	bool showPublicationClass = !string.IsNullOrWhiteSpace(Model.Submission.ClassName) && Model.Submission.Status != SubmissionStatus.Rejected && Model.Submission.ClassName != "Standard";
	bool canPublish = ViewData.UserHas(PermissionTo.PublishMovies)
		&& Model.Submission.Status == SubmissionStatus.PublicationUnderway
		&& Model.Submission.IsCataloged
		&& (Model.Submission.Publisher == User.Name() || ViewData.UserHas(PermissionTo.OverrideSubmissionStatus));
	string statusColor = StatusColor(Model.Submission.Status);

	bool canClaimAsJudge = ViewData.UserHas(PermissionTo.JudgeSubmissions)
		&& ViewData.UserHas(PermissionTo.EditSubmissions)
		&& Model.Submission.Status == SubmissionStatus.New
		&& Model.Submission.Authors.All(a => a != User.Name());

	bool canClaimAsPublisher = ViewData.UserHas(PermissionTo.PublishMovies)
		&& ViewData.UserHas(PermissionTo.EditSubmissions)
		&& Model.Submission.Status == SubmissionStatus.Accepted;

	var youtubeEmbedImage = Model.Submission.EncodeEmbedLink is not null
		? "https://i.ytimg.com/vi/" + Model.Submission.EncodeEmbedLink.Split('/').Last() + "/hqdefault.jpg"
		: null;

	var isNicoEmbed = hasEncode && Model.Submission.EncodeEmbedLink!.Contains("nicovideo");

	ViewData.SetMetaTags(new MetaTagModel
	{
		Title = Model.Submission.Title,
		Description = $"Submission #{Model.Id} from {Model.Submission.Submitted.ToString("yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture)}", 
		Image = youtubeEmbedImage,
		UseTwitterCard = !string.IsNullOrWhiteSpace(youtubeEmbedImage)
	});
}

@functions{
	string StatusColor(SubmissionStatus status)
	{
		switch (status)
		{
			default:
				return "info";
			case SubmissionStatus.Accepted:
			case SubmissionStatus.PublicationUnderway:
			case SubmissionStatus.Published:
			case SubmissionStatus.Playground:
				return "success";
			case SubmissionStatus.Rejected:
				return "danger";
			case SubmissionStatus.NeedsMoreInfo:
			case SubmissionStatus.Delayed:
				return "warning";
		}
	}
}

<div class="alert alert-@(statusColor)" role="alert">
	<h4 condition="!Model.IsPublished" class="alert-heading">
		Status: @Model.Submission.Status.EnumDisplayName()
		<small condition="Model.Submission.Status == SubmissionStatus.Rejected">
			<span condition="!string.IsNullOrWhiteSpace(Model.Submission.RejectionReasonDisplay)">(Reason: @Model.Submission.RejectionReasonDisplay)</span>
		</small>
	</h4>
	<h4 condition="Model.IsPublished" class="alert-heading">Status: <a asp-page="/Publications/View" asp-route-id="@Model.PublicationId">@Model.Submission.Status.EnumDisplayName()</a></h4>
	<div condition="QueueService.HoursRemainingForJudging(Model.Submission) > 0">
		(Available for judging in @QueueService.HoursRemainingForJudging(Model.Submission) hours)
	</div>
	<span condition="@(!string.IsNullOrWhiteSpace(Model.Submission.Judge))">
		<label asp-for="Submission.Judge"></label>:
		<profile-link username="@Model.Submission.Judge"></profile-link>
	</span>
	<span class="ms-3" condition="@(!string.IsNullOrWhiteSpace(Model.Submission.Publisher))">
		<label asp-for="Submission.Publisher"></label>:
		<profile-link username="@Model.Submission.Publisher"></profile-link>
	</span>
	@if (showPublicationClass)
	{
		<div class="mt-3">
			<label asp-for="Submission.ClassName"></label><span>: </span><a href="/@Model.Submission.ClassName">@Model.Submission.ClassName</a>
		</div>
	}
</div>

<row class="mt-2 mb-3">
	<div class="col-lg-6" condition="hasEncode">
		<partial condition="!isNicoEmbed" name="_YoutubeEmbed" model="Model.Submission.EncodeEmbedLink" />
		<partial condition="isNicoEmbed" name="_NicoEmbed" model="Model.Submission.EncodeEmbedLink" />
	</div>
	<div class="@(hasEncode ? "col-lg-6" : "col-lg-12")">
		<div class="sub-info mb-2">
			<div class="sub-info-cell">
				<label>@Html.DisplayNameFor(m => m.Submission.SystemDisplayName)</label>
				<div>@Model.Submission.SystemDisplayName</div>
			</div>
			<div condition="Model.Submission.GameId.HasValue" class="sub-info-cell">
				<label>Game</label>
				<div><game-link id="Model.Submission.GameId!.Value">@Model.Submission.GameName</game-link></div>
				<small condition="!string.IsNullOrWhiteSpace(Model.Submission.SubmittedGameName) && Model.Submission.SubmittedGameName != Model.Submission.GameName">(Submitted: @Model.Submission.SubmittedGameName)</small>
			</div>
			<div condition="!Model.Submission.GameId.HasValue" class="sub-info-cell">
				<label>Game</label>
				<div>@Model.Submission.SubmittedGameName</div>
			</div>
			<div condition="string.IsNullOrWhiteSpace(Model.Submission.Goal) && !string.IsNullOrWhiteSpace(Model.Submission.Branch)" class="sub-info-cell">
				<label>Submitted Goal</label>
				<div>@Model.Submission.Branch</div>
			</div>
			<div condition="!string.IsNullOrWhiteSpace(Model.Submission.Goal)" class="sub-info-cell">
				<label>@Html.DisplayNameFor(m => m.Submission.Goal)</label>
				<div>@Model.Submission.Goal</div>
			</div>
			<div condition="Model.Submission.GameVersionId > 0" class="sub-info-cell">
				<label>@Html.DisplayNameFor(m => m.Submission.GameVersion)</label>
				<div>
					<a
						asp-page="/Games/Versions/View"
						asp-route-id="@Model.Submission.GameVersionId"
						asp-route-gameid="@Model.Submission.GameId"
						asp-route-returnUrl="@HttpContext.CurrentPathToReturnUrl()">
						@Model.Submission.GameVersion
					</a>
				</div>
				<div condition="(!Model.Submission.GameVersionId.HasValue)">@Model.Submission.GameVersion</div>
			</div>
			<div class="sub-info-cell">
				<label>@Html.DisplayNameFor(m => m.Submission.Emulator)</label>
				<div>@Model.Submission.Emulator</div>
			</div>
			<div class="sub-info-cell">
				<label>@Html.DisplayNameFor(m => m.Submission.FrameCount)</label>
				<div>
					@Model.Submission.FrameCount
					<small condition="Model.Submission.CycleCount.HasValue">(@Html.DisplayNameFor(m => m.Submission.CycleCount) @Model.Submission.CycleCount)</small>
				</div>
			</div>
			<div class="sub-info-cell">
				<label>@Html.DisplayNameFor(m => m.Submission.FrameRate)</label>
				<div>@Model.Submission.FrameRate</div>
			</div>
			<div class="sub-info-cell">
				<label>@Html.DisplayNameFor(m => m.Submission.RerecordCount)</label>
				<div>@Model.Submission.RerecordCount</div>
			</div>
			<div class="sub-info-cell">
				<label asp-for="Submission.StartType"></label>
				<div>
					<span condition="Model.Submission.WarnStartType" class="badge bg-warning text-dark">!</span>
					@(Model.Submission.StartType?.ToString() ?? "Unknown")
				</div>
			</div>
			<div condition="!string.IsNullOrWhiteSpace(Model.Submission.Warnings)" class="sub-info-cell">
				<label>Warnings</label>
				<div>@Model.Submission.Warnings</div>
			</div>
			<div class="sub-info-cell">
				<label>Authors</label>
				<div>
					@foreach (var author in Model.Submission.Authors)
					{
						<profile-link username="@author"></profile-link><span condition="author != Model.Submission.Authors.Last()">,</span>
					}
					<small condition="!string.IsNullOrWhiteSpace(Model.Submission.AdditionalAuthors)">
						<br />(Additionally: @(string.Join(", ",Model.Submission.AdditionalAuthors!.SplitWithEmpty(","))))
					</small>
				</div>
			</div>
			<div condition="!string.IsNullOrWhiteSpace(Model.Submission.RomName) && Model.Submission.RomName != Model.Submission.GameVersion" class="sub-info-cell">
				<label>Submitted ROM</label>
				<div>@Model.Submission.RomName</div>
			</div>
		</div>
	
		<div condition="!string.IsNullOrWhiteSpace(Model.Submission.Annotations)" class="sub-info-cell mb-2">
			<label>
				<a class="collapsed text-body" data-bs-toggle="collapse" href="#collapse-content-annotations">
					<i class="fa fa-chevron-circle-down"></i> Annotations
				</a>
			</label>
			<pre id="collapse-content-annotations" class="collapse">
				@Model.Submission.Annotations
			</pre>
		</div>

		<small>
			Submitted by @Model.Submission.Submitter on @Model.Submission.Submitted
		</small>
		<div class="btn-toolbar mt-2">
			<a condition="@Model.Submission.TopicId > 0" asp-page="/Forum/Topics/Index" asp-route-id="@Model.Submission.TopicId" class="btn btn-secondary"><i class="fa-regular fa-comments"></i> Discuss and Vote</a>
			<a asp-page="Index" class="btn btn-secondary"><i class="fa fa-arrow-left"></i> Queue</a>
			<a asp-page="Index" asp-route-user="@Model.Submission.Submitter" class="btn btn-secondary">All by submitter</a>
			<a asp-page="View" asp-page-handler="Download" asp-route-id="@Model.Id" class="btn btn-primary"><i class="fa fa-download"></i> Download</a>
		</div>

		<div class="btn-toolbar mt-2">
			<a condition="@canClaimAsJudge" asp-page="Edit" asp-route-id="@Model.Id" asp-page-handler="ClaimForJudging" class="btn btn-success">Claim</a>
			<a condition="@canClaimAsPublisher" asp-page="Edit" asp-route-id="@Model.Id" asp-page-handler="ClaimForPublishing" class="btn btn-success">Claim</a>
			<a condition="@canEdit" asp-page="Edit" asp-route-id="@Model.Id" class="btn btn-primary border border-warning"><i class="fa fa-pencil"></i> Edit</a>
			<a permission="CatalogMovies" asp-page="Catalog" asp-route-id="@Model.Id" class="btn btn-info border border-warning"><i class="fa fa-book"></i> Catalog</a>
			<a condition="@canPublish" asp-page="Publish" asp-route-id="@Model.Id" class="btn btn-warning">Publish</a>
		</div>
	</div>
</row>

<card class="mb-2">
	<h5 class="card-header">Submission Comments</h5>
	<cardbody>
		<div class="card-text">
			@await Component.RenderWiki(LinkConstants.SubmissionWikiPage + Model.Id)
		</div>
	</cardbody>
</card>

<small>
	Last Edited by @Model.Submission.LastUpdateUser <timezone-convert asp-for="@Model.Submission.LastUpdateTimestamp" in-line="true" />
</small>
<br />
<a asp-page="/Wiki/PageHistory"
   asp-route-path="@(LinkConstants.SubmissionWikiPage + Model.Id)"
   class="btn btn-info btn-sm">
   <i class="fa fa-history"></i> Page History
</a>
<a asp-page="/Wiki/PageHistory"
   asp-route-path="@(LinkConstants.SubmissionWikiPage + Model.Id)"
   asp-route-latest="true"
   class="btn btn-info btn-sm">
   Latest diff
</a>
<a asp-page="/Wiki/Referrers"
   asp-route-path="@(Model.Id + "S")"
   class="btn btn-info btn-sm">
   List referrers
</a>
