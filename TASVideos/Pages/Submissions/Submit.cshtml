@page
@using TASVideos.Data.Helpers
@model SubmitModel
@{
	ViewData.SetTitle("Submit Movie");
	var notSupportedError = ViewData.ModelState.Values.Any(v => v.Errors.Any(e => e.ErrorMessage.Contains("not currently supported"))); // TODO: a less brittle check
	var parseErrors = !notSupportedError && ViewData.ModelState.Keys.Any(e => e == "Parser");
}
<info-alert dismissible="true">
	@await Component.RenderWiki(SystemWiki.SubmitMovieHeader)
</info-alert>
<hr />
<div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
<warning-alert dismissible="true" condition="notSupportedError">
	@await Component.RenderWiki(SystemWiki.SupportedMovieTypes)
</warning-alert>
<danger-alert dismissible="true" condition="parseErrors">
	@await Component.RenderWiki(SystemWiki.SubmissionZipFailure)
</danger-alert>
<span id="backup-submission-determinator" class="d-none">@Model.BackupSubmissionDeterminator</span>
<form method="post" enctype="multipart/form-data">
	<row>
		<column lg="6">
			<form-group>
				<label asp-for="Create.MovieFile" class="form-control-label"></label>
				<input asp-for="Create.MovieFile" class="form-control" />
				<div>@Html.DescriptionFor(m => m.Create.MovieFile)</div>
				<span asp-validation-for="Create.MovieFile" class="text-danger"></span>
			</form-group>
		</column>
		<column lg="6">
			<form-group>
				<label asp-for="Create.Authors" class="form-control-label"></label>
				<string-list asp-for="Create.Authors" />
				<span asp-validation-for="Create.Authors" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="Create.AdditionalAuthors" class="form-control-label"></label>
				<input asp-for="Create.AdditionalAuthors" class="form-control" />
				<div>@Html.DescriptionFor(m => m.Create.AdditionalAuthors)</div>
				<span asp-validation-for="Create.AdditionalAuthors" class="text-danger"></span>
			</form-group>
		</column>
	</row>
	<row>
		<column lg="6">
			<form-group>
				<label asp-for="Create.GameVersion" class="form-control-label"></label>
				<select asp-for="Create.GameVersion" asp-items="@SubmissionHelper.GameVersionOptions" class="form-control"></select>
				<span asp-validation-for="Create.GameVersion" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="Create.GameName" class="form-control-label"></label>
				<input asp-for="Create.GameName" class="form-control" placeholder="@Html.DescriptionFor(m => m.Create.GameName)" />
				<span asp-validation-for="Create.GameName" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="Create.Emulator" class="form-control-label"></label>
				<input asp-for="Create.Emulator" spellcheck="false" class="form-control" placeholder="@Html.DescriptionFor(m => m.Create.Emulator)" />
				<span asp-validation-for="Create.Emulator" class="text-danger"></span>
			</form-group>
		</column>
		<column lg="6">
			<form-group>
				<label asp-for="Create.Branch" class="form-control-label"></label>
				<input asp-for="Create.Branch" class="form-control" placeholder="@Html.DescriptionFor(m => m.Create.Branch)" />
				<span asp-validation-for="Create.Branch" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="Create.RomName" class="form-control-label"></label>
				<input asp-for="Create.RomName" class="form-control" placeholder="@Html.DescriptionFor(m => m.Create.RomName)" />
				<span asp-validation-for="Create.RomName" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="Create.EncodeEmbedLink" class="form-control-label"></label>
				<input asp-for="Create.EncodeEmbedLink" class="form-control" placeholder="@Html.DescriptionFor(m => m.Create.EncodeEmbedLink)" />
				<span asp-validation-for="Create.EncodeEmbedLink" class="text-danger"></span>
			</form-group>
		</column>
	</row>
	<fullrow>
		<form-group>
			<label asp-for="Create.Markup" class="form-control-label"></label>
			<span>
				@await Component.RenderWiki(SystemWiki.SubmissionImportant)
			</span>
			<partial name="_WikiEditHelper" model="@("Create_Markup")" />
			<textarea asp-for="Create.Markup" rows="12" class="form-control wiki-edit backup-content" data-backup-key="backup-submission"></textarea>
			<span asp-validation-for="Create.Markup" class="text-danger"></span>
			<fullrow id="backup-restore" class="d-none mt-2">
				<button id="backup-restore-button" type="button" class="btn btn-secondary">Restore Text</button>
				<label class="text-body-tertiary">from <span id="backup-time"></span></label>
			</fullrow>
			<div>
				<button id="prefill-btn" type="button" class="btn btn-secondary mt-2">Prefill comments</button>
			</div>
		</form-group>
	</fullrow>
	<row class="text-center justify-content-center mb-1 fs-6">
		<div class="col-auto">
			<div class="form-check">
				<input asp-for="Create.AgreeToInstructions" class="form-check-input" />
				<label asp-for="Create.AgreeToInstructions" class="form-check-label">I have read and followed the TASVideos <a href="/SubmissionInstructions">Submission Instructions</a>.</label>
				<br />
				<span asp-validation-for="Create.AgreeToInstructions" class="text-danger"></span>
			</div>
		</div>
	</row>
	<row class="text-center justify-content-center mb-3 fs-6">
		<div class="col-auto">
			<div class="form-check">
				<input asp-for="Create.AgreeToLicense" class="form-check-input" />
				<label asp-for="Create.AgreeToLicense" class="form-check-label">I agree to publishing this content under the <a href="https://creativecommons.org/licenses/by/2.0/">Creative Commons Attribution 2.0</a> license.</label>
				<br />
				<span asp-validation-for="Create.AgreeToLicense" class="text-danger"></span>
			</div>
		</div>
	</row>
	<fullrow class="text-center">
		<button id="preview-button" type="button" class="btn btn-secondary"><i class="fa fa-eye"></i> Preview</button>
		<submit-button id="submit-btn" class="btn btn-primary border border-warning @(Model.Create.Markup.Length > 0 ? "" : "d-none")">Submit</submit-button>
	</fullrow>
</form>

<partial name="_PreviewWindow" model="@((Html.IdFor(m => m.Create.Markup), "/Wiki/Preview"))" />
@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script>
		document.getElementById('prefill-btn').onclick = function () {
			const markup = document.getElementById('@Html.IdFor(m => m.Create.Markup)').value;
			if (markup) {
				return;
			}

			fetch("/Submissions/Submit?handler=PrefillText")
				.then(handleFetchErrors)
				.then(r => r.json())
				.then(data => {
					document.getElementById('@Html.IdFor(m => m.Create.Markup)').value = data.text;
				});
		};
		document.getElementById('preview-button').addEventListener('click', function () {
			document.getElementById('submit-btn').classList.remove('d-none');
		});
	</script>
	<script src="~/js/backup-text.js"></script>
}
