@page "{id}"
@using TASVideos.Data.Helpers
@model IndexModel
@{
	ViewData["Title"] = $"{Model.Topic.Title} - Topic {Model.Topic.Id}";
}
@section PageTitle {
	<div class="container mb-2">
		<h1 class="fs-4">@(Model.Topic.Title)</h1>
		<h6 condition="@Model.Topic.IsLocked" class="alert alert-danger py-2 m-0"><i class="fa fa-lock"></i> Locked</h6>
	</div>
}
<partial Name="_ForumHeader" />
<fullrow>
	<partial name="_TopicCrumbs" model="Model.Topic" />
	<partial name="_TopicActionBar" model="Model.Topic" />
	<a condition="ViewData.UserHas(PermissionTo.PostInLockedTopics)
		|| (!Model.Topic.IsLocked && ViewData.UserHas(PermissionTo.CreateForumPosts))"
	   asp-page="/Forum/Posts/Create"
	   asp-route-topicId="@Model.Id"
	   class="btn btn-primary btn-sm float-end">
		<span class="fa fa-plus"></span> Post
	</a>
</fullrow>

@if (Model.Topic.Poll is not null)
{
	<partial name="_Poll" model="Model.Topic.Poll" />
}

@*TODO: WikiPage is generic but the html assumes it will be a submission*@
@if (Model.WikiPage is not null)
{
	<div condition="@(!string.IsNullOrWhiteSpace(Model.EncodeEmbedLink))" class="d-flex justify-content-center">
		<div class="col-12 col-lg-6">
			@*Boilerplate bootstrap stuff *@
			<div class="ratio ratio-16x9">
				<div id="ytplayer"></div>
			</div>
			<script>
				const youtubeScriptId = 'youtube-api';
				let youtubeScript = document.getElementById(youtubeScriptId);
				let player;
				@*Loads the scripts which run the Youtube Player API asynchronously*@
				if (youtubeScript === null) {
					let tag = document.createElement('script');
					let firstScript = document.getElementsByTagName('script')[0];

					tag.src = 'https://www.youtube.com/iframe_api';
					tag.id = youtubeScriptId;
					firstScript.parentNode.insertBefore(tag, firstScript);
				}
				@*Populates the youtube player after the API script is ready*@
				if (!player) {
					window.onYouTubeIframeAPIReady = () => {
						player = new YT.Player('ytplayer', {
							videoId: "@Model.EncodeEmbedLink!.Split("/").Last()"
						});
					}
				}
			</script>
			<a href="@Model.EncodeEmbedLink">(Link to video)</a>
		</div>
	</div>
	<card class="mt-2 mb-2">
		<cardheader>
			<row class="align-items-center row">
				<span class="col-auto fs-5">Submission Text</span>
				<sub-link class="col-auto btn btn-secondary btn-sm" id="@SubmissionHelper.SubmissionId(Model.WikiPage.PageName)"><i class="fa fa-info-circle"></i> Full Submission Page</sub-link>
			</row>
		</cardheader>
		<cardbody style="max-height: 600px; overflow-y: scroll">
			<wiki-markup markup="@Model.WikiPage.Markup" page-data="Model.WikiPage"></wiki-markup>
		</cardbody>
	</card>
}

<hr class="mt-1" />
<fullrow>
	<partial name="_Pager" model="Model.Topic.Posts" />
</fullrow>

@foreach (var post in Model.Topic.Posts.OrderBy(p => p.CreateTimestamp).ToList())
{
	<partial name="_TopicPost" model="post" />
}

<fullrow class="mt-2">
	<partial name="_TopicActionBar" model="Model.Topic" />
	<partial name="_TopicCrumbs" model="Model.Topic" />
	<a condition="ViewData.UserHas(PermissionTo.PostInLockedTopics)
		|| (!Model.Topic.IsLocked && ViewData.UserHas(PermissionTo.CreateForumPosts))"
	   asp-page="/Forum/Posts/Create"
	   asp-route-topicId="@Model.Id"
	   class="btn btn-primary btn-sm float-end">
		<span class="fa fa-plus"></span> Post
	</a>
</fullrow>
<hr />
<fullrow class="mt-2">
	<partial name="_Pager" model="Model.Topic.Posts" />
</fullrow>
