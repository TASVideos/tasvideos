@page
@model IndexModel
@{
	ViewData["Title"] = "Forum";
}

<div class="clearfix">
	<partial Name="_ForumHeader" />
	<a asp-page="/Forum/Subforum/Create" permission="EditForums" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i> Create</a>
	<div class="float-end pb-2">
		<a asp-page="/Forum/Posts/Latest" class="btn btn-secondary btn-sm">
			Latest Posts
		</a>
		<a asp-page="/Forum/Posts/New" condition="@User.IsLoggedIn()" class="btn btn-secondary btn-sm">
			Posts since last visit
		</a>
		<a asp-page="/Forum/Posts/Unanswered" class="btn btn-secondary btn-sm">
			Unanswered Posts
		</a>
		<a class="btn btn-secondary btn-sm" onclick="markAllPostsRead()">
			Mark all Posts as read
		</a>
	</div>
</div>
<div class="clearfix flex-wrap d-flex d-md-block">
	@foreach (var cat in Model.Categories.OrderBy(c => ((c.Ordinal + 21) % 31) % 22)) // please don't ban me
	{
		<div class="col-12 col-md-6 @(cat.Ordinal <= 30 ? "float-start ps-md-0 pe-md-2" : "float-end ps-md-2 pe-md-0") order-@(((cat.Ordinal + 6) % 37) % 8)" style="@(cat.Ordinal <= 30 ? "clear: left;" : "")">
			<partial name="_Category" model="cat" />
		</div>
	}
</div>

<span id="serverUnixTime" class="d-none">@DateTime.UtcNow.UnixTimestamp()</span>
@section Scripts {
	<script>
		let currentTime = Number(document.getElementById('serverUnixTime').textContent);
		{
			let visitedPosts = localStorage.getItem('VisitedPosts');
			visitedPosts = JSON.parse(visitedPosts) ?? {};
			let activitySubforums = document.getElementsByClassName('activity-subforum');
			for (let activitySubforum of activitySubforums) {
				let displayClass;
				let firstPostId, firstPostDate;
				let activityPostsCreated = activitySubforum.dataset.activityPostsCreated ? JSON.parse(activitySubforum.dataset.activityPostsCreated) : {};
				for (let postId in activityPostsCreated) {
					let lastVisit = visitedPosts[postId];
					if (!lastVisit || lastVisit < activityPostsCreated[postId]) {
						displayClass = 'text-warning';
						if (!firstPostId || activityPostsCreated[postId] < firstPostDate) {
							firstPostId = postId;
							firstPostDate = activityPostsCreated[postId];
						}
					}
				}
				if (!displayClass) {
					let activityPostsEdited = activitySubforum.dataset.activityPostsEdited ? JSON.parse(activitySubforum.dataset.activityPostsEdited) : {};
					for (let postId in activityPostsEdited) {
						let lastVisit = visitedPosts[postId];
						if (!lastVisit || lastVisit < activityPostsEdited[postId]) {
							displayClass = 'text-info';
							if (!firstPostId || activityPostsEdited[postId] < firstPostDate) {
								firstPostId = postId;
								firstPostDate = activityPostsEdited[postId];
							}
						}
					}
				}
				if (displayClass) {
					activitySubforum.classList.add(displayClass);
					activitySubforum.classList.remove('d-none');
					activitySubforum.parentElement.setAttribute('href', '/Forum/Posts/' + firstPostId);
				}
			}

			// clean up localStorage
			let allActivityPostIds = new Set();
			for (let activitySubforum of activitySubforums) {
				let activityPostsCreated = activitySubforum.dataset.activityPostsCreated ? JSON.parse(activitySubforum.dataset.activityPostsCreated) : {};
				for (let postId in activityPostsCreated) {
					allActivityPostIds.add(postId);
				}
				let activityPostsEdited = activitySubforum.dataset.activityPostsEdited ? JSON.parse(activitySubforum.dataset.activityPostsEdited) : {};
				for (let postId in activityPostsEdited) {
					allActivityPostIds.add(postId);
				}
			}
			Object.keys(visitedPosts).filter(postId => !allActivityPostIds.has(postId)).forEach(postId => delete visitedPosts[postId]);
			localStorage.setItem('VisitedPosts', JSON.stringify(visitedPosts));
		}
		function markAllPostsRead() {
			let visitedPosts = localStorage.getItem('VisitedPosts');
			visitedPosts = JSON.parse(visitedPosts) ?? {};
			let activitySubforums = document.getElementsByClassName('activity-subforum');
			for (let activitySubforum of activitySubforums) {
				let activityPostsCreated = activitySubforum.dataset.activityPostsCreated ? JSON.parse(activitySubforum.dataset.activityPostsCreated) : {};
				for (let postId in activityPostsCreated) {
					visitedPosts[postId] = currentTime;
				}
				let activityPostsEdited = activitySubforum.dataset.activityPostsEdited ? JSON.parse(activitySubforum.dataset.activityPostsEdited) : {};
				for (let postId in activityPostsEdited) {
					visitedPosts[postId] = currentTime;
				}
			}
			localStorage.setItem('VisitedPosts', JSON.stringify(visitedPosts));
			location.reload();
		}
	</script>
}
