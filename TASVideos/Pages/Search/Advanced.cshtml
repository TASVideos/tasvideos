@page
@model AdvancedModel
@{
	ViewData.SetTitle("Advanced Search");
}

<small>
	Performs a case-insensitive search using a regular expression.
</small>
<form method="get">
	<row class="mt-3">
		<column lg="6">
			<form-group>
				<label asp-for="SearchTerms"></label>
				<input type="text" asp-for="SearchTerms" class="form-control" />
				<span condition="PageContext.HttpContext.Request.QueryString.HasValue" asp-validation-for="SearchTerms" class="text-danger"></span>
			</form-group>
			<form-group>
				<div>
					<input asp-for="GameSearch" />
					<label asp-for="GameSearch"></label>
				</div>
				<div>
					<input asp-for="PublicationSearch" />
					<label asp-for="PublicationSearch"></label>
				</div>
				<div>
					<input asp-for="PageSearch" />
					<label asp-for="PageSearch"></label>
				</div>
				<div>
					<input asp-for="TopicSearch" />
					<label asp-for="TopicSearch"></label>
				</div>
				<div>
					<input asp-for="PostSearch" />
					<label asp-for="PostSearch"></label>
				</div>
			</form-group>
			<button type="submit" class="btn btn-primary">Search</button>
			<a condition="Model.EnablePrev"
				class="btn btn-secondary"
				asp-route-SearchTerms="@Model.SearchTerms"
				asp-route-PageNumber="@(Model.PageNumber - 1)"
				asp-route-PageSearch="@Model.PageSearch"
				asp-route-TopicSearch="@Model.TopicSearch"
				asp-route-PostSearch="@Model.PostSearch"
				asp-route-PostSearch="@Model.PublicationSearch"
				asp-route-GameSearch="@Model.GameSearch">
				Prev
			</a>
			<a condition="!Model.EnablePrev" disable class="btn btn-secondary">Prev</a>
			<a condition="Model.EnableNext"
				class="btn btn-secondary"
				asp-route-SearchTerms="@Model.SearchTerms"
				asp-route-PageNumber="@(Model.PageNumber + 1)"
				asp-route-PageSearch="@Model.PageSearch"
				asp-route-TopicSearch="@Model.TopicSearch"
				asp-route-PostSearch="@Model.PostSearch"
				asp-route-PostSearch="@Model.PublicationSearch"
				asp-route-GameSearch="@Model.GameSearch">
				Next
			</a>
			<a condition="!Model.EnableNext" disable class="btn btn-secondary">Next</a>
		</column>
	</row>
</form>
<br />

<div condition="Model.GameResults.Any()">
	<h4>Game Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			@foreach (var result in Model.GameResults.Take(Model.DisplayPageSize))
			{
				<tr>
					<td>
						<a asp-page="/Games/Index" asp-route-id="@result.Id">@result.DisplayName</a>
					</td>
				</tr>
			}
		</table>
	</div>
</div>

<div condition="Model.PublicationResults.Any()">
	<h4>Publication Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			@foreach (var result in Model.PublicationResults.Take(Model.DisplayPageSize))
			{
				<tr>
					<td>
						<a href="/@(result.Id)M">@result.Title</a>
					</td>
				</tr>
			}
		</table>
	</div>
</div>

<div condition="Model.PageResults.Any()">
	<h4>Wiki Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			<tr>
				<th>Page</th>
				<td>Content</td>
			</tr>
			@foreach (var result in Model.PageResults.Take(Model.DisplayPageSize))
			{
				<tr>
					<td>
						<wiki-link page-name="@result.PageName"></wiki-link>
					</td>
					<td>
						@result.Text
					</td>
				</tr>
			}
		</table>
	</div>
</div>

<div condition="Model.TopicResults.Any()">
	<h4>Topic Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			<tr>
				<td>Subforum</td>
				<th>Topic</th>
			</tr>
			@foreach (var result in Model.TopicResults.Take(Model.DisplayPageSize))
			{
				<tr>
					<td>
						@result.SubforumName
					</td>
					<td>
						<a href="/Forum/Topics/@result.TopicId">@result.TopicName</a>
					</td>
				</tr>
			}
		</table>
	</div>
</div>

<div condition="Model.PostResults.Any()">
	<h4>Post Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			<tr>
				<th>Post</th>
				<td>Content</td>
			</tr>
			@foreach (var result in Model.PostResults.Take(Model.DisplayPageSize))
			{
				<tr>
					<td>
						<a href="/Forum/Posts/@result.PostId">@result.TopicName</a>
					</td>
					<td>
						@{
							var start = Math.Max(0, result.Index - 30);
							var length = Math.Min(60, result.Text.Length - start);
						}
						@result.Text.Substring(start, length)
					</td>
				</tr>
			}
		</table>
	</div>
</div>
