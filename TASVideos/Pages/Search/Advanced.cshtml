@page
@model AdvancedModel
@{
	ViewData["Title"] = "Advanced Search";
}

<small>
	Performs a case-insensitive search using a regular expression.
</small>
<form method="get">
	<row class="mt-3">
		<column lg="6">
			<form-group>
				<label asp-for="SearchTerms"></label>
				<input type="text" asp-for="SearchTerms" class="form-control" />
				<span condition="PageContext.HttpContext.Request.QueryString.HasValue" asp-validation-for="SearchTerms" class="text-danger"></span>
			</form-group>
			<button type="submit" class="btn btn-primary">Search</button>
			<a condition="Model.PageNumber > 1" asp-page="/Search/Advanced" class="btn btn-secondary" asp-route-searchterms="@Model.SearchTerms" asp-route-pagenumber="@(Model.PageNumber - 1)">Prev</a>
			<a condition="Model.PageResults.Count > AdvancedModel.PageSize || Model.PostResults.Count > AdvancedModel.PageSize || Model.GameResults.Count > AdvancedModel.PageSize" asp-page="/Search/Advanced" class="btn btn-secondary" asp-route-searchterms="@Model.SearchTerms" asp-route-pagenumber="@(Model.PageNumber + 1)">Next</a>
		</column>
	</row>
</form>

<div condition="Model.GameResults.Any()">
	<hr />
	<h4>Game Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			@foreach (var result in Model.GameResults.Take(AdvancedModel.PageSize))
			{
				<tr>
					<td>
						<a asp-page="/Games/Index" asp-route-id="@result.Id">@result.SystemCode @result.DisplayName</a>
					</td>
				</tr>
			}
		</table>
	</div>
</div>

<div condition="Model.PageResults.Any()">
	<hr />
	<h4>Wiki Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			<tr>
				<th>Page</th>
				<td>Content</td>
			</tr>
			@foreach (var result in Model.PageResults.Take(AdvancedModel.PageSize))
			{
				<tr>
					<td>
						<wiki-link page-name="@result.PageName"></wiki-link>
					</td>
					<td>
						@result.Text
					</td>
				</tr>
			}
		</table>
	</div>
</div>

<div condition="Model.PostResults.Any()">
	<hr />
	<h4>Post Results:</h4>
	<div class="table-container">
		<table class="table table-striped table-bordered">
			<tr>
				<th>Post</th>
				<td>Content</td>
			</tr>
			@foreach (var result in Model.PostResults.Take(AdvancedModel.PageSize))
			{
				<tr>
					<td>
						<a href="/Forum/Posts/@result.PostId">@result.TopicName</a>
					</td>
					<td>
						@{
							var start = Math.Max(0, result.Index - 30);
							var length = Math.Min(60, result.Text.Length - start);
						}
						@result.Text.Substring(start, length)
					</td>
				</tr>
			}
		</table>
	</div>
</div>
