@using TASVideos.Core
@model IPaged

<row class="my-2 align-items-center">
	<div class="col-12 text-end">
		<small><label class="text-body-tertiary me-4"> Showing items [@(Model.Offset() + 1) - @Model.LastRow()] of @Model.RowCount</label></small>
		<a asp-page="@ViewContext.Page()" class="btn btn-outline-silver">
			<i class="fa fa-sort"> <i class="fa fa-times-circle"></i></i>
		</a>
	</div>
	<div condition="Model.LastPage() > 1" class="col-12 text-center">
		<div class="btn-group flex-wrap" role="group">
			@{
				var pagerClass = "btn btn-secondary border-dark flex-grow-0";
				var pagerDisabledClass = "btn btn-silver border-dark flex-grow-0";
				var ellipsisClass = "btn btn-outline-secondary border-dark flex-grow-0";
				var additionalProperties = Model.AdditionalProperties();
			}
			<a disable="@Model.CurrentPage == 1"
			   asp-page="@ViewContext.Page()"
			   asp-all-route-data="@additionalProperties"
			   asp-route-CurrentPage="@(Model.CurrentPage - 1)"
			   asp-route-PageSize="@Model.PageSize"
			   asp-route-Sort="@Model.Sort"
			   type="button" class="@(Model.CurrentPage == 1 ? pagerDisabledClass : pagerClass)">
				<span class="fa fa-chevron-left"></span>
			</a>

			@{
				var totalPages = Model.LastPage();
				var currentPage = Model.CurrentPage ?? 0;
				var pageList = Enumerable.Range(1, totalPages).ToList();
				var leftShown = pageList.Where(p => p <= 2);
				var leftHidden = pageList.Where(p => 2 < p && p < currentPage - 1).ToList();
				var middleShown = pageList.Where(p => 2 < p && currentPage - 1 <= p && p <= currentPage + 1 && p < totalPages - 1);
				var rightHidden = pageList.Where(p => currentPage + 1 < p && p < totalPages - 1).ToList();
				var rightShown = pageList.Where(p => 2 < p && totalPages - 1 <= p);
				foreach (var iteratorPage in leftShown)
				{
					<a asp-page="@ViewContext.Page()"
					   asp-all-route-data="@additionalProperties"
					   asp-route-CurrentPage="@iteratorPage"
					   asp-route-PageSize="@Model.PageSize"
					   asp-route-Sort="@Model.Sort"
					   type="button" class="@pagerClass @(iteratorPage == currentPage ? "active" : "")">@iteratorPage</a>
				}
				if (leftHidden.Count == 1)
				{
					<a asp-page="@ViewContext.Page()"
					   asp-all-route-data="@additionalProperties"
					   asp-route-CurrentPage="@leftHidden.First()"
					   asp-route-PageSize="@Model.PageSize"
					   asp-route-Sort="@Model.Sort"
					   type="button" class="@pagerClass">@leftHidden.First()</a>

				}
				<div condition="leftHidden.Count > 1" class="btn-group" role="group">
					<button type="button" class="@ellipsisClass" data-bs-toggle="dropdown">...</button>
					<ul class="dropdown-menu">
						@foreach (var iteratorPage in leftHidden)
						{
							<li>
								<a asp-page="@ViewContext.Page()"
								   asp-all-route-data="@additionalProperties"
								   asp-route-CurrentPage="@iteratorPage"
								   asp-route-PageSize="@Model.PageSize"
								   asp-route-Sort="@Model.Sort"
								   class="dropdown-item">@iteratorPage</a>
							</li>
						}
					</ul>
				</div>
				foreach (var iteratorPage in middleShown)
				{
					<a asp-page="@ViewContext.Page()"
					   asp-all-route-data="@additionalProperties"
					   asp-route-CurrentPage="@iteratorPage"
					   asp-route-PageSize="@Model.PageSize"
					   asp-route-Sort="@Model.Sort"
					   type="button" class="@pagerClass @(iteratorPage == currentPage ? "active" : "")">@iteratorPage</a>
				}
				if (rightHidden.Count == 1)
				{
					<a asp-page="@ViewContext.Page()"
					   asp-all-route-data="@additionalProperties"
					   asp-route-CurrentPage="@rightHidden.First()"
					   asp-route-PageSize="@Model.PageSize"
					   asp-route-Sort="@Model.Sort"
					   type="button" class="@pagerClass">@rightHidden.First()</a>
				}
				<div condition="rightHidden.Count > 1" class="btn-group" role="group">
					<button type="button" class="@ellipsisClass" data-bs-toggle="dropdown">...</button>
					<ul class="dropdown-menu">
						@foreach (var iteratorPage in rightHidden)
						{
							<li>
								<a asp-page="@ViewContext.Page()"
								   asp-all-route-data="@additionalProperties"
								   asp-route-CurrentPage="@iteratorPage"
								   asp-route-PageSize="@Model.PageSize"
								   asp-route-Sort="@Model.Sort"
								   class="dropdown-item">@iteratorPage</a>
							</li>
						}
					</ul>
				</div>
				foreach (var iteratorPage in rightShown)
				{
					<a asp-page="@ViewContext.Page()"
					   asp-all-route-data="@additionalProperties"
					   asp-route-CurrentPage="@iteratorPage"
					   asp-route-PageSize="@Model.PageSize"
					   asp-route-Sort="@Model.Sort"
					   type="button" class="@pagerClass @(iteratorPage == currentPage ? "active" : "")">@iteratorPage</a>
				}
			}
			<a disable="@Model.CurrentPage == Model.LastPage()"
			   asp-page="@ViewContext.Page()"
			   asp-all-route-data="@additionalProperties"
			   asp-route-CurrentPage="@(Model.CurrentPage + 1)"
			   asp-route-PageSize="@Model.PageSize"
			   asp-route-Sort="@Model.Sort"
			   type="button" class="@(Model.CurrentPage == Model.LastPage() ? pagerDisabledClass : pagerClass)">
				<span class="fa fa-chevron-right"></span>
			</a>
		</div>
	</div>
</row>