@inject UserManager _userManager
@inject SignInManager _signInManager
@{ 
	bool isSignedIn = _signInManager.IsSignedIn(User);
	int notificationCount = 0;

	if (isSignedIn)
	{
		notificationCount = await _userManager.GetUnreadMessageCount(User.GetUserId());
	}
}
<div class="d-md-flex">
	@if (isSignedIn)
	{
		<form asp-page="/Account/Logout" method="post" id="logoutForm" asp-antiforgery="false">
			<navbar>
				<nav-item activate="Messages">
					<a id="Inbox" class="nav-link text-nowrap" asp-page="/Messages/Inbox">
						<span condition="notificationCount > 0" class="badge bg-danger text-white">@notificationCount</span>
						<span condition="notificationCount > 0" class="sr-only">unread messages</span>
						<span class="fa fa-envelope"></span>
					</a>
				</nav-item>
				<nav-item activate="Profile">
					<a id="Manage" class="nav-link" asp-page="/Profile/Index" title="Manage">
						<i class="fa fa-user d-inline"></i>&nbsp;@User.Name()
					</a>
				</nav-item>
				<nav-item>
					<button id="Logout" type="submit" class="btn btn-link navbar-btn nav-link text-nowrap"><i class="fa fa-sign-out"></i> Log out</button>
				</nav-item>
				<nav-item activate="Search">
					<a id="Search" class="nav-link text-nowrap" asp-page="/Search/Index"><i class="fa fa-search"></i> Search</a>
				</nav-item>
			</navbar>
		</form>
	}
	else
	{
		<navbar>
			<nav-item activate="Register">
				<a id="Register" class="nav-link" asp-page="/Account/Register">Register</a>
			</nav-item>
			<nav-item activate="Login">
				<a id="Login" class="nav-link text-nowrap" asp-page="/Account/Login" asp-route-returnUrl="@Context.CurrentPathToReturnUrl()"><i class="fa fa-sign-in"></i> Log in</a>
			</nav-item>
			<nav-item activate="Search">
				<a id="Search" class="nav-link text-nowrap" asp-page="/Search/Index"><i class="fa fa-search"></i> Search</a>
			</nav-item>
		</navbar>
	}
</div>
