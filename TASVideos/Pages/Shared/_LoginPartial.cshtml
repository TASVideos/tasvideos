@using TASVideos.Tasks
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject PrivateMessageTasks PmTasks
@{ 
	bool isSignedIn = SignInManager.IsSignedIn(User);
	int notificationCount = 0;

	if (isSignedIn)
	{
		var user = await UserManager.GetUserAsync(User);
		notificationCount = await PmTasks.GetUnreadMessageCount(user);
	}
}
<div class="d-md-flex">
	@if (isSignedIn)
	{
		<form asp-page="/Account/Logout" method="post" id="logoutForm">
			<navbar>
				<nav-item activate="Messages">
					<a class="nav-link" asp-page="/Messages/Inbox">
						<span condition="notificationCount > 0" class="badge badge-danger">@notificationCount</span>
						<span condition="notificationCount > 0" class="sr-only">unread messages</span>
						<span class="fa fa-envelope"></span>
					</a>
				</nav-item>
				<nav-item activate="Profile">
					<a class="nav-link" asp-page="/Profile/Index" title="Manage">
						@UserManager.GetUserName(User)
					</a>
				</nav-item>
				<nav-item>
					<button type="submit" class="btn btn-link navbar-btn nav-link">Log out</button>
				</nav-item>
			</navbar>
		</form>
	}
	else
	{
		<navbar>
			<nav-item activate="Register">
				<a class="nav-link" asp-page="/Account/Register">Register</a>
			</nav-item>
			<nav-item activate="Login">
				<a class="nav-link" asp-page="/Account/Login" asp-route-returnUrl="@Context.ReturnUrl()">Log in</a>
			</nav-item>
		</navbar>
	}
</div>