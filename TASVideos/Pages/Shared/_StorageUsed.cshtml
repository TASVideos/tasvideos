@model int

@functions
{
	string ProgressColor(double percent)
	{
		if (percent > 80)
		{
			return "danger";
		}

		if (percent > 50)
		{
			return "warning";
		}

		if (percent > 10)
		{
			return "success";
		}

		return "info";
	}

}

@{
	var used = Model;
	var available = SiteGlobalConstants.UserFileStorageLimit - used;
	var usedPercent = Math.Round(used / (double)SiteGlobalConstants.UserFileStorageLimit * 100, 1);
}

<span>Used: @used.ToSizeString()</span>
<span class="pull-end">Limit @SiteGlobalConstants.UserFileStorageLimit.ToSizeString()</span>

<div class="progress">
	<input id="StorageAvailable" type="hidden" value=@available />
	<div class="progress-bar progress-bar-striped bg-@ProgressColor(usedPercent)" role="progressbar" style="width: @(usedPercent)%;" aria-valuenow="@(usedPercent)" aria-valuemin="0" aria-valuemax="100">
		@(usedPercent)%
	</div>
</div>