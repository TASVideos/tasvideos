@model TASVideos.Pages.Publications.Models.PublicationDisplayModel

<div condition="@Model.ObsoletedById.HasValue" class="text-danger mb-2">
	<h4>This movie has been obsoleted!</h4>
	<a href="/@(Model.ObsoletedById)M" class="btn btn-primary">Obsoleting Movie</a>
</div>
<card>
	<cardheader>
		<img src="/@Model.TierIconPath" /> <span>@Model.Title</span>
		<div class="pull-right">
			@foreach (var flag in Model.Flags.Where(f => !string.IsNullOrWhiteSpace(f.IconPath)))
			{
				<a href="@flag.LinkPath">
					<img title="@flag.Name" alt="[@flag.Name]" src="/@flag.IconPath" />
				</a>
			}
		</div>
	</cardheader>
	<cardbody>
		<row>
			<div class="col-md-4">
				<div>
					<img src="~/media/@Model.Screenshot" style="max-width: 100%" />
				</div>
				<a href="@Model.OnlineWatchingUrl" class="btn btn-primary btn-sm mt-1">Watch</a>
				<a asp-page="View" asp-route-id="@Model.Id" class="btn btn-secondary btn-sm mt-1">Publication</a>
				<a asp-page="/Submissions/View" asp-route-id="@Model.SubmissionId" class="btn btn-secondary btn-sm mt-1">Submission</a>
				<a permission="EditPublicationMetaData"
				   asp-page="Edit"
				   asp-route-id="@Model.Id"
				   class="btn btn-secondary btn-sm mt-1">Edit</a>
				<a permission="CatalogMovies"
				   asp-page="/Publications/Catalog"
				   asp-route-id="@Model.Id"
				   class="btn btn-secondary btn-sm mt-1">Catalog</a>
				<a condition="@Model.TopicId > 0"
				   asp-page="/Forum/Topics"
				   asp-route-id="@Model.TopicId"
				   class="btn btn-secondary btn-sm mt-1">
					Discuss
				</a>
			</div>
			<div class="col-md-5">
				<row>
					<a class="col-lg-4" asp-page="/Publications/View" asp-page-handler="Download" asp-route-id="@Model.Id">Movie file (@System.IO.Path.GetExtension(Model.MovieFileName))</a>
					<a condition="Model.TorrentLink != null" class="col-lg-4" href="@Model.TorrentLink">A/V file via BitTorrent</a>
					<a class="col-lg-4" condition="@(!string.IsNullOrWhiteSpace(Model.MirrorSiteUrl))" href="@Model.MirrorSiteUrl">A/V file via Mirror</a>
				</row>
				<fullrow>
					<div><small>@Model.CreateTimeStamp.Date.ToShortDateString()</small></div>
					@await Component.RenderWiki(LinkConstants.PublicationWikiPage + Model.Id)
				</fullrow>
				<fullrow>
					<div condition="Model.RatingCount <= 2">
						@Model.RatingCount votes (too few to display)
						<a asp-page="/Ratings/Index" asp-route-id="@Model.Id" class="btn btn-primary btn-sm">Rate</a>
					</div>
					<div condition="Model.RatingCount > 2">
						<span permission="RateMovies">
							<a asp-page="/Publications/Rate"
							   asp-route-id="@Model.Id"
							   asp-route-returnUrl="@Context.ReturnUrl()">
								Rating
							</a>: &nbsp;
						</span>
						<span condition="!ViewData.UserHas(PermissionTo.RateMovies)">Rating:</span>
						@Math.Round(Model.OverallRating ?? 0, 2) (<a asp-page="/Ratings/Index" asp-route-id="@Model.Id">@Model.RatingCount votes</a>)
					</div>
				</fullrow>
			</div>
			<div class="col-md-2">
				<small condition="Model.GenreTags.Any()">
					Genre:<br />
					@foreach (var genre in Model.GenreTags)
					{
						<a href="/Movies-@genre.Code">@genre.DisplayName</a>
					}
					<br />
				</small>
				<small condition="Model.Tags.Any()">
					Tags:<br />
					@foreach (var tag in Model.Tags)
					{
						<a href="/Movies-@tag.Code">@tag.DisplayName</a><br />
					}
				</small>
			</div>
		</row>
	</cardbody>
</card>
