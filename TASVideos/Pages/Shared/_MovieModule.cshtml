@model TASVideos.Pages.Publications.Models.PublicationDisplayModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
	var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
	var canRate = User.Has(PermissionTo.RateMovies);
	var ratingString = Model.Rating.Unrated ? "Rate" : $"Rated {Model.Rating.Rating} / 10";
	var temp = Model.OnlineWatchingUrls.ToList();
	var preferredWatchUrl = temp.Count == 1
		? temp[0]
		: temp.FirstOrDefault(t => t.Url?.Contains("youtube") ?? false);
}

@inject IAwards _awards
@{
	var publicationAwards = await _awards.ForPublication(Model.Id);
}

@functions{
	static string StreamingSiteDisplay(string? onlineWatchingUrl)
	{
		if (string.IsNullOrWhiteSpace(onlineWatchingUrl))
		{
			return "";
		}

		var lowered = onlineWatchingUrl.ToLower();
		if (lowered.Contains("youtube"))
		{
			return " on YouTube";
		}

		if (lowered.Contains("nicovideo"))
		{
			return " on Niconico";
		}

		return "";
	}
}

<card class="border border-primary">
	<cardheader class="bg-cardprimary p-2">
		<div class="gx-3 clearfix">
			<div class="float-start me-2" condition="!string.IsNullOrWhiteSpace(Model.ClassIconPath)">
				<icon path="@Model.ClassIconPath" />
			</div>
			<div class="float-end">
				@foreach (var flag in Model.Flags.Where(f => !string.IsNullOrWhiteSpace(f.IconPath)))
				{
					<a href="/@flag.LinkPath">
						<img class="ms-1" title="@flag.Name" alt="[@flag.Name]" src="/@flag.IconPath" />
					</a>
				}
			</div>
			<h4>
				<a asp-page="/Publications/View" asp-route-id="@Model.Id" class="text-decoration-none"><span class="text-dark">@Model.Title</span></a>
			</h4>
		</div>
	</cardheader>
	<cardbody class="px-2 py-0">
		<div condition="@Model.ObsoletedById.HasValue" class="col card-subtitle text-dark my-2">
			<b>This movie has been obsoleted!</b><br />
			<pub-link id="Model.ObsoletedById!.Value" class="btn bg-dark text-white btn-sm">Obsoleting Movie</pub-link>
		</div>
		<row class="bg-cardsecondary gx-3 py-2">
			<div class="col-auto mb-4 mb-md-0 mx-auto text-center text-md-start">
				<div>
					<a @(preferredWatchUrl != null ? $"href={preferredWatchUrl.Url} target=_blank" : null)>
					<img src="~/media/@Model.Screenshot.Path"
						 alt="@Model.Screenshot.Description"
						 title="@Model.Screenshot.Description"
						 class="w-100 pixelart-image"
						 loading="lazy" />
					</a>
				</div>
				<div>
					@foreach (var url in Model.OnlineWatchingUrls)
					{
						<a href="@url.Url" class="btn btn-primary btn-sm mt-1" target="_blank">
							<i class="fa fa-external-link"></i> Watch @(!string.IsNullOrWhiteSpace(url.DisplayName) ? $"{url.DisplayName}" : StreamingSiteDisplay(url.Url))
						</a>
					}
				</div>
				<div>
					<a asp-page="/Submissions/View" asp-route-id="@Model.SubmissionId" class="btn btn-secondary btn-sm mt-1"><i class="fa fa-info-circle"></i> Author notes</a>
					<a condition="@Model.TopicId > 0"
					   asp-page="/Forum/Topics/Index"
					   asp-route-id="@Model.TopicId"
					   class="btn btn-secondary btn-sm mt-1">
						<i class="fa fa-comments-o"></i> Discuss
					</a>
				</div>
				<div>
					<input condition="@canRate" id="RequestVerificationToken" type="hidden" value="@requestToken" />
					<a condition="@canRate" asp-page="/Publications/Rate" asp-route-id="@Model.Id" onclick="toggleDisplay(@(Model.Id)); return false;" class="btn btn-success btn-sm mt-1" id="ownRating-@(Model.Id)">@ratingString</a>
					<a asp-page="/Publications/Rate" asp-route-id="@Model.Id" class="btn btn-warning btn-sm mt-1">
						<i class="fa fa-star-o"></i> <span id="overallRating-@(Model.Id)">@((Model.OverallRating ?? 0).ToOverallRatingString())</span> / 10
					</a>
					<div condition="@canRate" class="mt-1 mb-0 d-none border border-primary bg-cardprimary rounded p-1" id="rate-@(Model.Id)">
						<button class="btn btn-success btn-sm" onclick="rate(@(Model.Id),false);"><span class="fa fa-save"></span> Save</button>
						<input asp-for="Rating.Rating" type="number" class="form-control d-inline-block btn-sm" style="width:5em;" min="0" max="10" value="@Model.Rating.Rating" step="0.1" />
						<button class="btn btn-danger btn-sm" onclick="rate(@(Model.Id),true)"><i class="fa fa-times"></i> Remove</button>
						<div>
						<input id="slider-@(Model.Id)" type="range" class="form-range mw-100 h-auto mt-1" min="0" max="10" value="@Model.Rating.Rating" step="0.1" />
						</div>
					</div>
				</div>
				<script condition="@canRate">
					function rate(pubId, unrated) {
						const rating = {};
						rating.Rating = document.querySelector(`#rate-${pubId} #Rating_Rating`).value;
						rating.Unrated = unrated;
						fetch(`/Publications/Rate/${pubId}?handler=Inline`, {
							method: 'POST',
							body: JSON.stringify(rating),
							headers: {
								RequestVerificationToken:
								document.getElementById('RequestVerificationToken').value
							}
						})
							.then(r => {
								if (!r.ok) {
									throw Error(r.statusText);
								}
								return r;
							})
							.then(r => r.text())
							.then(r => {
								const update = JSON.parse(r);
								if (unrated) {
									document.querySelector(`#ownRating-${pubId}`).innerHTML = 'Rate';
								} else if (update.Rating !== "") {
									document.querySelector(`#ownRating-${pubId}`).innerHTML = `Rated ${update.Rating} / 10`;
								}
								document.querySelector(`#overallRating-${pubId}`).innerHTML = update.OverallRating;
								toggleDisplay(pubId);
							})
							.catch(e => alert("Rating failed"));
					}
					function toggleDisplay(pubId) {
						ratingConnect(document.querySelector(`#rate-${pubId} #Rating_Rating`), document.querySelector(`#slider-${pubId}`));
						document.querySelector(`#rate-${pubId}`).classList.toggle('d-none');
					}
					function ratingConnect(textbox, slider) {
						textbox.oninput = function () {
							slider.value = textbox.value;
						};
						slider.oninput = function () {
							slider.value = Math.round(Number(this.value) * 2) / 2;
							textbox.value = slider.value;
						};
					}
				</script>
				@foreach (var award in publicationAwards.OrderByDescending(a => a.Year))
				{
					<partial name="_Award" model="award" />
				}
			</div>
			<div class="col-md">
				<div class="pb-2 text-muted"><small>Published <timezone-convert asp-for="@Model.CreateTimestamp" in-line="true" date-only="true" relative-time="false" /></small></div>
				<fullrow>
					@await Component.RenderWiki(LinkConstants.PublicationWikiPage + Model.Id)
				</fullrow>
			</div>
		</row>
		<row condition="Model.ObsoletedMovies.Any()" class="my-2 gx-3">
			<div>
				<span>Obsoletes:</span><br />
				@foreach (var obsoletedMovie in Model.ObsoletedMovies)
				{
					<pub-link id="obsoletedMovie.Id" class="ms-2">@obsoletedMovie.Title</pub-link><br />
				}
			</div>
		</row>
		<row class="border-bottom my-2 gx-3">
			<small class="mb-2">
				<a asp-page="/Games/PublicationHistory"
					asp-route-id="@Model.GameId"
					asp-route-highlight="@Model.Id">
					See full publication history
				</a>
			</small>
		</row>
		<row class="my-2 gx-3">
			<div class="col-auto">
				<small>
					<span>
						Game:<br />
						<game-link id="@Model.GameId" class="ms-2">@Model.GameName</game-link>
					</span>
					<span condition="Model.GameGenres.Any()">
						<br />Genres:<br />
						@foreach (var genre in Model.GameGenres)
						{
							<a href="/Movies-@genre" class="ms-2">@genre</a><br />
						}
					</span>
				</small>
			</div>
			<div condition="Model.Tags.Any()" class="col-auto">
				<small>
					Tags:<br />
					@foreach (var tag in Model.Tags)
					{
						<a href="/Movies-@tag.Code" class="ms-2">@tag.DisplayName</a><br />
					}
				</small>
			</div>
			<div class="col-auto">
				<small condition="Model.MirrorSiteUrls.Any()">
					A/V files:<br />
					<span condition="Model.MirrorSiteUrls.Any()">
						@foreach (var url in Model.MirrorSiteUrls)
						{
							<a href="@url.Url" class="ms-2">
								@(string.IsNullOrWhiteSpace(url.DisplayName) ? "A/V file" : url.DisplayName) via Mirror
								<br/>
							</a>
						}
					</span>
				</small>
			</div>
			<div class="col-auto">
				<small>
					Emulator Replay:
					<div condition="!string.IsNullOrWhiteSpace(Model.EmulatorVersion)">
						<span class="ms-2">@Model.EmulatorVersion</span>
					</div>
					<div>
						<a asp-page="/Publications/View" asp-page-handler="Download" asp-route-id="@Model.Id" class="ms-2">
							<i class="fa fa-download"></i> Download (@System.IO.Path.GetExtension(Model.MovieFileName))
						</a>
					</div>
				</small>
				
			</div>
			<div condition="Model.MovieFileLinks.Any()" class="col-auto">
				<small>
					Additional Downloads:<br />
					@foreach (var file in Model.MovieFileLinks)
					{
						<a class="ms-2" title="@file.Path" asp-page="/Publications/View" asp-page-handler="DownloadAdditional" asp-route-fileId="@file.Id">(@file.Description)</a>
					}
				</small>
			</div>
			<div class="col">
				<div class="float-end">
					<a permission="EditPublicationMetaData"
					   asp-page="/Publications/Edit"
					   asp-route-id="@Model.Id"
					   class="btn btn-secondary btn-sm border border-warning mt-1"><i class="fa fa-pencil"></i> Edit</a>
					<a permission="CatalogMovies"
					   asp-page="/Publications/Catalog"
					   asp-route-id="@Model.Id"
					   class="btn btn-secondary btn-sm border border-warning mt-1"><i class="fa fa-book"></i> Catalog</a>
					<a permission="EditPublicationMetaData"
						href="/MovieMaintenanceLog?id=@Model.Id"
						class="btn btn-secondary btn-sm border border-warning mt-1">
						<i class="fa fa-history"></i> Logs
					</a>
					<a permission="Unpublish"
						class="btn btn-danger btn-sm border border-warning mt-1"
						asp-page="/Publications/Unpublish"
						asp-route-id="@Model.Id">
						<i class="fa fa-remove"></i> Unpublish
					</a>
				</div>
			</div>
		</row>
	</cardbody>
</card>
