@model UserRatings
@{
	var isMyPage = User.GetUserId() == Model.Id;
	ViewData.SetTitle($"Ratings for {Model.UserName}");
}
<h4 condition="!isMyPage">User: <profile-link username="@Model.UserName"></profile-link></h4>
<div condition="isMyPage && !Model.PublicRatings" class="alert alert-warning">
	Your ratings are currently private and will not be visible to others. This can be changed on the
	<a asp-page="/Profile/Settings">Settings Page</a>
</div>
<div condition="!isMyPage && !Model.PublicRatings && !User.Has(PermissionTo.SeePrivateRatings)">
	<div class="alert alert-warning">This user's ratings are private</div>
</div>
<div condition="isMyPage || Model.PublicRatings || User.Has(PermissionTo.SeePrivateRatings)">
	<warning-alert condition="!isMyPage && User.Has(PermissionTo.SeePrivateRatings)">
		This user has elected to keep their ratings private. You are seeing this because you have the @nameof(PermissionTo.SeePrivateRatings) permission
	</warning-alert>
	<form id="obsolete-form">
		<div class="d-flex justify-content-end" style="gap: 8px;">
			<label style="margin: auto 0" for="include-obsolete">Include Obsolete <input id="include-obsolete" name="IncludeObsolete" checked="@(Model.Ratings.Request.IncludeObsolete)" type="checkbox" asp-for="Ratings.Request.IncludeObsolete"/></label>
			<noscript>
				<submit-button btn-class-override="ml-2 btn-secondary btn-sm" class="float-center">Go</submit-button>
			</noscript>
		</div>
	</form>
	<partial name="_Pager" model="Model.Ratings" />
	<standard-table>
		<sortable-table-head sorting="@Model.Ratings.Request" model-type="typeof(UserRatings.Rating)" />
		@foreach (var rating in Model.Ratings)
		{
			<tr style="@(rating.IsObsolete ? "opacity: 0.6" : "")">
				<td><a href="/@(rating.PublicationId)M">@rating.PublicationTitle</a></td>
				<td>@(Math.Round(rating.Value, 1))</td>
				<td>@rating.IsObsolete.ToYesNo()</td>
			</tr>
		}
	</standard-table>
</div>
<script src="/js/rating-list.js"></script>