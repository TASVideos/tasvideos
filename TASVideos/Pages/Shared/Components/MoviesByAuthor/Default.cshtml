@model TASVideos.ViewComponents.Models.MoviesByAuthorModel

@{
	var authors = Model.Publications.SelectMany(p => p.Authors).Distinct().ToList();

	var authorsWithPus = authors.Select(author => new
	{
		Name = author,
		Pubs = Model.Publications.Where(p => p.Authors.Any(a => a == author)).ToList()
	});
}

<div condition="!Model.Publications.Any()">
	No records found
</div>

<div condition="Model.Publications.Any()">
	@foreach (var author in authorsWithPus.OrderByDescending(a => a.Pubs.Count).ThenBy(a => a.Name))
	{
		<card>
			<cardheader>
				<profile-link username="@author.Name"></profile-link>
				<span>(@author.Pubs.Count)</span>
				<span condition="Model.MarkNewbies && Model.NewbieAuthors.Any(a => a == author.Name)" class="badge bg-success text-white">New Author</span>
			</cardheader>
			<cardbody>
                <ul style="list-style-type: none;">
                    @foreach (var pub in author.Pubs)
                    {
                        <li>
                            @if (pub.TierIconPath != null)
                            {
                                var tierIconPath2x = $"{pub.TierIconPath.Split('.')[0]}-2x.png";
                                var tierIconPath4x = $"{pub.TierIconPath.Split('.')[0]}-4x.png";
                                <img style="width: 18px" condition="Model.ShowTiers" src="/@tierIconPath2x"
                                     srcset="/@pub.TierIconPath .5x,
									/@tierIconPath2x 1x,
									/@tierIconPath4x 2x" />
                            }
                            <pub-link id="pub.Id"> @pub.Title </pub-link>
                        </li>
                    }
                </ul>
			</cardbody>
		</card>
		
	}
</div>
