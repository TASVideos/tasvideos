@using TASVideos.Core.Services.Wiki
@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
	Layout = "_Layout.cshtml";
	IWikiPage pageData = ViewData["WikiPage"] as IWikiPage ?? throw new InvalidOperationException("WikiPage not set");

	ViewData["ActiveTab"] = WikiHelper.IsGameResourcesPage(pageData.PageName)
		? "Game Resources"
		: pageData.PageName;
}
@section Header {
	@{
		var description = "";
		if (pageData.AuthorName is not null && pageData.RevisionMessage is not null)
		{
			description = $"Last Edited By {pageData.AuthorName} - {pageData.RevisionMessage}";
		}
	}
	<meta property="og:type" content="website" />
	<meta property="og:site_name" content="TASVideos" />
	<meta property="og:title" content="@pageData.PageName" />
	<meta property="og:description" content="@description" />
	<meta property="og:url" content="@Context.Request.ToUrl()" />
	<meta property="og:image" content="@($"{Context.Request.ToBaseUrl()}/images/logo-embed.png")" />
}

@section PageTitle {
	<div class="container mb-2">
		<nav aria-label="breadcrumb" class="card card-header">
			<ol class="breadcrumb m-0">
				@{
					var allPages = pageData.PageName.Split('/');
					var runningPath = "";
					foreach (var item in allPages.Take(allPages.Length - 1))
					{
						runningPath += $"/{item}";
						<li class="breadcrumb-item"><a href="@runningPath">@item.SplitCamelCase()</a></li>
					}
					<li class="breadcrumb-item active" aria-current="page"><h1>@allPages.Last().SplitCamelCase()</h1></li>
				}
			</ol>
		</nav>
	</div>
}
<partial name="_WikiLayoutHeader" model="pageData" />
@RenderBody()
<partial name="_WikiLayoutFooter" model="pageData" />

@section Scripts {
	@if (IsSectionDefined("Scripts"))
	{
		@await RenderSectionAsync("Scripts")
	}
}
