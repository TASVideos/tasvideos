<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<environment include="Production">
		<meta name="google-site-verification" content="dvluB-ypxKLVGmSQpqBmi9i1xo85I0OmRFD2GhJkTYw" />
	</environment>
	@{ var title = ViewData.GetTitle(); }
	<title>@(title is not null ? title + " - " : "")TASVideos</title>

	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
	<link rel="stylesheet" href="/css/bootstrap.css" />
	<link rel="stylesheet" href="/css/site.css" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
	integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
		  crossorigin="anonymous"
		  referrerpolicy="no-referrer" />
	@if (this.Model.HttpContext.Request.Path.ToString().TrimStart('/').StartsWith("Forum/"))
	{
		<link rel="stylesheet" href="/css/forum.css" />
	}

	<script src="~/js/site-head.js"></script>

	<link rel="alternate" href="/news.rss" type="application/rss+xml" title="TASVideos RSS News Feed">
	<link rel="alternate" href="/submissions.rss" type="application/rss+xml" title="TASVideos RSS Submission Feed">
	<link rel="alternate" href="/publications.rss" type="application/rss+xml" title="TASVideos RSS Publication Feed">
	<link rel="alternate" href="/wiki.rss" type="application/rss+xml" title="TASVideos RSS Wiki Feed">
	<partial name="_MetaTags" />
</head>
<body>
	<nav id="banner" class="navbar navbar-expand-md navbar-dark mb-4">
		<div class="container-fluid">
			<div class="site-banner w-100 overflow-hidden position-absolute start-0 top-0">
				<picture>
					<source srcset="/images/tasvideosbg.avif" type="image/avif">
					<source srcset="/images/tasvideosbg.webp" type="image/webp">
					<img src="/images/tasvideosbg.jpg">
				</picture>
			</div>
			<a id="icon" asp-page="/Index">
				<picture>
					<source srcset="/images/logo-light.webp .5x,
							/images/logo-light-2x.webp 1x,
							/images/logo-light-4x.webp 2x"
							type="image/webp">
					<img class="site-icon site-icon-light" src="/images/logo-light-2x.png"
						 srcset="/images/logo-light.png .5x,
							/images/logo-light-2x.png 1x,
							/images/logo-light-4x.png 2x" loading="lazy">
				</picture>
				<picture>
					<source srcset="/images/logo-dark.webp .5x,
							/images/logo-dark-2x.webp 1x,
							/images/logo-dark-4x.webp 2x"
							type="image/webp">
					<img class="site-icon site-icon-dark"
						 srcset="/images/logo-dark.png .5x,
							/images/logo-dark-2x.png 1x,
							/images/logo-dark-4x.png 2x" loading="lazy">
				</picture>
			</a>
			<a id="mantra" asp-page="/Index">
				<div id="brand">TASVideos</div>
				<div id="mantra-1">Tool-assisted game movies</div>
				<div id="mantra-2">When human skills are just not enough</div>
			</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse z-2" id="navbarCollapse">
				<div class="container-fluid">
					<div class="d-flex">
						<div class="me-auto">
							<partial name="_NavBarPartial" />
						</div>
						<div>
							<partial name="_LoginPartial" />
						</div>
					</div>
				</div>
			</div>
		</div>
	</nav>

	@if (ViewData.UsePageTitle())
	{
		var heading = ViewData.GetHeading();
		int? prev = null;
		int? next = null;
		string fmtStr = ViewData.GetNavigationFormatStr();
		if (User.Has(PermissionTo.CatalogMovies))
		{
			var id = ViewData.Int("NavigationId");
			if (id.HasValue)
			{
				prev = id > 1 ? id - 1 : null;
				next = id + 1;
			}
		}

		var permissionsRequired = Context.GetRequiredPermissionsView() as RequirePermissionsView;
		bool requiresPermissions = permissionsRequired is not null && permissionsRequired.Permissions.Count > 0;

		<div class="container mb-2">
			<h1 class="page-title card card-body d-block">
				<a condition="prev.HasValue" href="@string.Format(fmtStr!, prev)"><i class="fa fa-arrow-left"></i></a>
				@if (IsSectionDefined("PageTitle"))
				{
					@await RenderSectionAsync("PageTitle")
				}
				else
				{
					@heading
				}
				<a condition="next.HasValue" class="float-end" href="@string.Format(fmtStr!, next)"><i class="fa fa-arrow-right"></i></a>
				<a condition="requiresPermissions" class="float-end text-body-secondary" data-id="permission-modal-button" href="#"><i class="fa-solid fa-shield-halved"></i></a>
			</h1>
		</div>

		<div condition="requiresPermissions" id="permission-modal" class="modal fade" tabindex="-1">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title"><i class="fa-solid fa-shield-halved"></i> This page requires permissions</h5>
						<button type='button' class='btn-close' data-bs-dismiss='modal'></button>
					</div>
					<div class="modal-body">
						<p>You can visit this page because you have @(permissionsRequired!.Permissions.Count == 1 ? "" : permissionsRequired.MatchAny ? "one of " : "all of ")the following required permissions:</p>
						<ul>
							@foreach (var permission in permissionsRequired.Permissions)
							{
								<li>@permission.ToString().SplitCamelCase()</li>
							}
						</ul>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-silver" data-bs-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
		</div>
	}

<div class="container">
	<alert type="@TempData["MessageType"]" condition="@(!string.IsNullOrWhiteSpace(TempData["MessageType"]?.ToString()))" dismissible="true">
		@TempData["Message"]
	</alert>
	<div asp-validation-summary="ModelOnly" class="alert alert-danger alert-dismissible" role="alert"></div>
	@RenderBody()
	<hr/>
	<footer class="mb-3">
		<button id="button-scrolltop" class="d-none position-fixed px-3 py-1 m-2 bottom-0 end-0 btn btn-primary fa fa-caret-up"></button>
		<row class="justify-content-start align-items-center">
			<p class="">
					@{
						var (version, sha) = Versioning.GetVersion();
					}
					<a class="btn btn-silver btn-sm mb-2" href="https://github.com/TASVideos/tasvideos/commit/@(sha)">&copy; @DateTime.UtcNow.Year - TASVideos v@(version)</a>
					<a class="btn btn-info btn-sm mb-2" href="/SiteRules">Terms</a>
					<a class="btn btn-info btn-sm mb-2" href="/api">API</a>
					@{
						string? path = null;
						if (ViewData.GetWikiPage() is null && this.Model is not (Publications.ViewModel or Submissions.ViewModel))
						{
							path = this.Model.HttpContext.Request.Path.ToString().TrimStart('/');
						}
					}
				<a condition="path is not null" class="btn btn-info btn-sm mb-2" asp-page="/Wiki/Referrers" asp-route-path="@path">List referrers</a>
			</p>
		</row>
	</footer>
</div>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
			integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
			crossorigin="anonymous"></script>
	<script src="~/js/site.js"></script>
	<script src="~/js/prism.js"></script>
	@if (ViewData.ClientSideValidationEnabled())
	{
		<script src="https://code.jquery.com/jquery-3.6.0.min.js"
				integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
				crossorigin="anonymous">
		</script>
		<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.min.js"
				integrity="sha256-TAzGN4WNZQPLqSYvi+dXQMKehTYFoVOnveRqbi42frA="
				crossorigin="anonymous">
		</script>
		<script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"
				integrity="sha256-H8OdhvNWpxCHXd9Osw8R7yOsWj9CQKGDMlujYVBsYMw="
				crossorigin="anonymous">
		</script>
	}
	<script condition="ViewData.UsesSelectImprover()" src="/js/select-improver.js"></script>
	<noscript condition="ViewData.UsesSelectImprover()"><style>.d-none-except-noscript { display: block !important; }</style></noscript>
	<script condition="ViewData.UsesUserSearch()" src="/js/user-search.js"></script>
	<script condition="ViewData.UsesBackupText()" src="/js/backup-text.js"></script>
	<script condition="ViewData.UsesStringList()" src="/js/string-list.js"></script>
	<script condition="ViewData.UsesPreview()" src="/js/preview.js"></script>
	<script condition="ViewData.UsesShowMore()" src="/js/show-more.js"></script>
	<script condition="ViewData.UsesPostHelper()" src="/js/post-helper.js"></script>
	<script condition="ViewData.UsesWikiEditHelper()" src="/js/wiki-edit-helper.js"></script>
	<script condition="ViewData.UsesDiff()" src="/js/diff_match_patch.js"></script>
	<script condition="ViewData.UsesDiff()" src="/js/diff_view.js"></script>
	<script condition="ViewData.UsesMoodPreview()" src="/js/mood-preview.js"></script>
	<script src="/js/prevent-double-submit.js"></script>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
