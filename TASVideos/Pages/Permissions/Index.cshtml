@page
@model IndexModel
@{
	ViewData["Title"] = "Permission List";
	var toc = Model.Permissions
		.OrderBy(m => m.Group)
		.ThenBy(m => m.Id)
		.Select(m => (m.Name, m.Group))
		.GroupBy(m => m.Group);
}

<p>These are a list of site permissions that are allocated to site roles</p>

<div class="card mb-2">
	<cardheader>
		<h4>@ViewData["Title"]</h4>
	</cardheader>
	<cardbody>
		@foreach (var entry in toc)
		{
			<ul>
				<li>
					@entry.Key
					<ul>
						@foreach (var item in entry)
						{
							<li>
								<a href="#@item.Name">@item.Name</a>
							</li>
						}
					</ul>
				</li>
			</ul>
		}
	</cardbody>
</div>

<table class="table table-bordered table-striped">
	<tr>
		<th>@Html.DisplayNameFor(m => m.Permissions.First().Name)</th>
		<th>@Html.DisplayNameFor(m => m.Permissions.First().Group)</th>
		<th>@Html.DisplayNameFor(m => m.Permissions.First().Roles)</th>
		<th>@Html.DisplayNameFor(m => m.Permissions.First().Description)</th>
	</tr>
	@foreach (var entry in Model.Permissions.OrderBy(m => m.Group).ThenBy(m => m.Id))
	{
		<tr>
			<td id="@entry.Name" nowrap>@entry.Name</td>
			<td nowrap>@entry.Group</td>
			<td nowrap>
				<ul>
					@foreach(var role in entry.Roles.OrderBy(r => r))
					{
					<li><a asp-page="/Roles/Index" asp-route-role="@role">@role</a></li>
					}
				</ul>
			</td>
			<td>@entry.Description</td>
		</tr>
	}
</table>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}
