@page
@using TASVideos.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PageHistoryModel

@{
	ViewData["Title"] = "Page History For " + Model.History.PageName;
	bool hasDiff = Model.FromRevision.HasValue && Model.ToRevision.HasValue;
	var canEdit = WikiHelper.UserCanEditWikiPage(Model.Path, User.Name(), User.Permissions());
}

@functions{
	string RowStyles(int revision)
	{
		if (revision == Model.FromRevision)
		{
			return "table-info";
		}

		if (revision == Model.ToRevision)
		{
			return "table-primary";
		}

		return "";
	}

	string DiffBtnStyles(int revision, bool isFrom)
	{
		if (isFrom && revision == Model.FromRevision)
		{
			return "btn btn-primary btn-sm";
		}

		if (!isFrom && revision == Model.ToRevision)
		{
			return "btn btn-primary btn-sm";
		}

		return "btn btn-info btn-sm";
	}
}

<a class="btn btn-secondary" href="/@WikiHelper.ProcessLink(Model.History.PageName)"><span class="fa fa-arrow-left"></span> Back to Page</a>
<div id="diff-view" class="mt-3 border border-secondary">

</div>
<div id="diff-options" condition="hasDiff">
	<hr />
	<label><input name="diff-type" type="radio" value="1" checked="checked" onclick="generateDiff()" /> Inline</label>
	<label><input name="diff-type" type="radio" value="0" onclick="generateDiff()" /> Side by Side</label>
	<label><input name="context-size" type="number" value="5" min="0" max="9999" oninput="generateDiff()" /> Context Size</label>
</div>
<hr />
<div class="table-container">
	<table class="table table-striped table-light table-sm">
		<thead>
			<tr>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().Revision)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().CreateTimestamp)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().CreateUserName)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().MinorEdit)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().RevisionMessage)</th>
				<th>Diff</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody data-hasrevisions="true">
			@{ var revisions = Model.History.Revisions.OrderByDescending(r => r.Revision).ToList(); }
			@for (var i = 0; i < revisions.Count; i++)
			{
				var revision = revisions[i];
				var previousId = i < revisions.Count - 1 ? revisions[i + 1].Revision : (int?)null;
				<tr data-revision="@revision.Revision" class="@RowStyles(revision.Revision)">
					<td><a href="/@(Model.History.PageName)?revision=@revision.Revision">@revision.Revision</a></td>
					<td><timezone-convert asp-for="@revision.CreateTimestamp" /></td>
					<td>@revision.CreateUserName</td>
					<td>@revision.MinorEdit</td>
					<td>@revision.RevisionMessage</td>
					<td style="min-width: 100px">
						<div class="btn-group" role="button" aria-label="diff picker">
							<a
								condition="previousId.HasValue"
								class="btn btn-secondary btn-sm"
								asp-page="/Wiki/PageHistory"
								asp-route-path="@Model.Path"
								asp-route-fromRevision="@previousId"
								asp-route-toRevision="@revision.Revision">
								Prev
							</a>
							<button
								class="@DiffBtnStyles(revision.Revision, true)"
								data-from="true"
								onClick="diffBtnClicked(@revision.Revision, null)">
								From
							</button>
							<button
								class="@DiffBtnStyles(revision.Revision, false)"
								data-to="true" 
								onClick="diffBtnClicked(null, @revision.Revision)">
								To
							</button>
							
						</div>
					</td>
					<td>
						
						<delete-button
							permission="DeleteWikiPages"
							asp-href="/Wiki/DeletedPages/DeleteRevision?path=@(Model.History.PageName)&revision=@revision.Revision"
							warning-message="Are you sure you want to delete this revision?"
							class="btn-sm">
							<i class="fa fa-remove"></i>
						</delete-button>
						<form asp-page="/Wiki/Edit" asp-page-handler="RollbackLatest" asp-route-path="@Model.Path" condition="canEdit">
							<input type="hidden" name="previousRevision" value="@(164)" />
							<button condition="i == 0 && revision.Revision > 1" type="submit" class="btn btn-sm btn-warning" title="Rollback this revision"><i class="fa fa-undo"></i></button>
						</form>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
<input type="hidden" asp-for="Diff.LeftMarkup" rows="8" class="form-control" />
<input type="hidden" asp-for="Diff.RightMarkup" rows="8" class="form-control" />

@section Scripts {
	<script src="~/js/diff_match_patch.js"></script>
	<script src="~/js/diff_view.js"></script>
	<script>
		
		window.addEventListener('load', function() {
			if (@hasDiff.ToString().ToLower()) {
				generateDiff();
			}
		});

		function generateDiff() {
			const viewType = parseInt(document.querySelector('[name="diff-type"]:checked').value);
			const contextSize = parseInt(document.querySelector('[name="context-size"').value);

			const leftMarkup = document.getElementById('@Html.IdFor(m => m.Diff.LeftMarkup)').value;
			const rightMarkup = document.getElementById('@Html.IdFor(m => m.Diff.RightMarkup)').value;
			const diffElem = document.getElementById('diff-view');

			renderDiff(
				{ text: leftMarkup, name: "r@(Model.FromRevision ?? 0)" },
				{ text: rightMarkup, name: "r@(Model.ToRevision ?? 0)" },
				diffElem,
				!!viewType,
				contextSize
			);
		}

		let fromRevision, toRevision;
		function diffBtnClicked(from, to) {
			if (from) {
				fromRevision = from;
			}

			if (to) {
				toRevision = to;
			}

			if (fromRevision && toRevision) {
				window.location = `/Wiki/PageHistory?path=@Model.Path&fromRevision=${fromRevision}&toRevision=${toRevision}`;
			} else {
				updateTableStyling();
			}
		}

		function updateTableStyling() {
			Array.from(document.querySelectorAll('tbody[data-hasrevisions] tr'))
				.forEach(function (elem) {
					elem.classList.remove('table-primary');
					elem.classList.remove('table-info');
					elem.querySelector("button[data-from]").classList.remove("btn-primary");
					elem.querySelector("button[data-from]").classList.add("btn-info");
					elem.querySelector("button[data-to]").classList.remove("btn-primary");
					elem.querySelector("button[data-to]").classList.add("btn-info");
				});
		
			const cur = document.querySelector(`tr[data-revision="${toRevision}"]`);
			if (cur) {
				cur.classList.add('table-primary');
				cur.querySelector("button[data-to]").classList.remove("btn-info");
				cur.querySelector("button[data-to]").classList.add("btn-primary");
			}

			const prev = document.querySelector(`tr[data-revision="${fromRevision}"]`);
			if (prev) {
				prev.classList.add('table-info');
				prev.querySelector("button[data-from]").classList.remove("btn-info");
				prev.querySelector("button[data-from]").classList.add("btn-primary");
			}
		}
	</script>
}
