@page
@model PageHistoryModel

@{
	ViewData["Title"] = "Page History For " + Model.History.PageName;
}
<a class="btn btn-secondary" href="/@WikiHelper.ProcessLink(Model.History.PageName)"><span class="fa fa-arrow-left"></span> Back to Page</a>
<div id="diff-view" class="d-none mt-3 border border-secondary" style="max-height: 400px; overflow-y: auto">

</div>
<div id="diff-options" class="d-none">
	<hr />
	<label><input name="diff-type" type="radio" value="1" checked="checked" onclick="generateDiff(1)" /> Inline</label>
	<label><input name="diff-type" type="radio" value="0" onclick="generateDiff(0)" /> Side by Side</label>
</div>
<hr />
<div class="table-container">
	<table class="table table-striped table-light table-sm">
		<thead>
			<tr>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().Revision)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().CreateTimestamp)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().CreateUserName)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().MinorEdit)</th>
				<th>@Html.DisplayNameFor(m => m.History.Revisions.First().RevisionMessage)</th>
				<th>Diff</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody data-hasrevisions="true">
			@{ var revisions = Model.History.Revisions.OrderByDescending(r => r.Revision).ToList(); }
			@for (var i = 0; i < revisions.Count; i++)
			{
				var revision = revisions[i];
				var previousId = i < revisions.Count - 1 ? revisions[i + 1].Revision : (int?)null;
				<tr data-revision="@revision.Revision">
					<td><a href="/@(Model.History.PageName)?revision=@revision.Revision">@revision.Revision</a></td>
					<td><timezone-convert asp-for="@revision.CreateTimestamp" /></td>
					<td>@revision.CreateUserName</td>
					<td>@revision.MinorEdit</td>
					<td>@revision.RevisionMessage</td>
					<td style="min-width: 100px">
						<div class="btn-group" role="button" aria-label="diff picker">
							<button disabled="@(!previousId.HasValue)" class="btn btn-secondary btn-sm" onclick="GetDiff(@previousId, @revision.Revision)">Prev</button>
							<button class="btn bg-info text-dark btn-sm" data-from="true" onClick="GetDiff(@revision.Revision, null)">From</button>
							<button class="btn bg-info text-dark btn-sm" data-to="true" onClick="GetDiff(null, @revision.Revision)">To</button>
						</div>
					</td>
					<td>
						<delete-button
							permission="DeleteWikiPages"
							asp-href="/Wiki/DeletedPages/DeleteRevision?path=@(Model.History.PageName)&revision=@revision.Revision"
							warning-message="Are you sure you want to delete this revision?"
							class="btn-sm">
							<i class="fa fa-remove"></i>
						</delete-button>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
<input type="hidden" id="left-revision" />
<input type="hidden" id="right-revision" />

<script>
	var fromRevision, toRevision;

	function updateTableStyling() {
		document
			.querySelectorAll('tbody[data-hasrevisions] tr')
			.toArray()
			.forEach(function (elem) {
				elem.classList.remove('table-primary');
				elem.classList.remove('table-info');
				elem.querySelector("button[data-from]").classList.remove("btn-primary");
				elem.querySelector("button[data-from]").classList.add("bg-info","text-dark");
				elem.querySelector("button[data-to]").classList.remove("btn-primary");
				elem.querySelector("button[data-to]").classList.add("bg-info","text-dark");
			});

		var cur = document.querySelector('tr[data-revision="' + toRevision + '"]');
		if (cur) {
			cur.classList.add('table-primary');
			cur.querySelector("button[data-to]").classList.remove("bg-info","text-dark");
			cur.querySelector("button[data-to]").classList.add("btn-primary");
		}

		var prev = document.querySelector('tr[data-revision="' + fromRevision + '"]');
		if (prev) {
			prev.classList.add('table-info');
			prev.querySelector("button[data-from]").classList.remove("bg-info","text-dark");
			prev.querySelector("button[data-from]").classList.add("btn-primary");
		}
	}

	function GetDiff(fromId, toId) {
		var baseUrl = '/Wiki/Diff?handler=DiffData';
		var path = '@Model.History.PageName';
		if (fromId != null) {
			fromRevision = fromId;
		}
		if (toId != null) {
			toRevision = toId;
		}

		if (fromRevision == null || toRevision == null) {
			updateTableStyling();
			return;
		}

		var ajaxUrl = baseUrl + '&path=' + path + '&fromRevision=' + fromRevision + '&toRevision=' + toRevision;

		var xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function() {
			if (xmlhttp.readyState === XMLHttpRequest.DONE) {
				document.getElementById("diff-view").classList.remove("d-none");
				document.getElementById("diff-options").classList.remove("d-none");
				if (xmlhttp.status === 200) {
					var data = JSON.parse(xmlhttp.responseText);
					document.getElementById("left-revision").value = data.leftMarkup;
					document.getElementById("right-revision").value = data.rightMarkup;
					generateDiff(parseInt(document.querySelector('[name="diff-type"]:checked').value));
					updateTableStyling();
				}
			}
		};

		xmlhttp.open("GET", ajaxUrl, true);
		xmlhttp.send();
	}

	function generateDiff(viewType) {
		var diffView = document.getElementById("diff-view");
		var base = difflib.stringAsLines(document.getElementById("left-revision").value),
			newTxt = difflib.stringAsLines(document.getElementById("right-revision").value),
			opcodes = new difflib.SequenceMatcher(base, newTxt).get_opcodes(),
			diffOutputDiv = diffView;

		diffOutputDiv.innerHTML = "";

		diffOutputDiv.appendChild(diffview.buildView({
			baseTextLines: base,
			newTextLines: newTxt,
			opcodes: opcodes,
			baseTextName: "r" + fromRevision,
			newTextName: "r" + toRevision,
			contextSize: 5,
			viewType: viewType
		}));
	}
</script>

@section Scripts {
	<script src="~/js/difflib.js"></script>
	<script src="~/js/diffview.js"></script>
}
