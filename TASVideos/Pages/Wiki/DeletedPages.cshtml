@page "{handler?}"
@model DeletedPagesModel

@{
	ViewData["Title"] = "Deleted Pages";
}
<div class="table-container">
	<table class="table table-striped table-bordered">
		<tr>
			<th>@Html.DisplayNameFor(m => m.DeletedPages.First().PageName)</th>
			<th>@Html.DisplayNameFor(m => m.DeletedPages.First().RevisionCount)</th>
			<th>@Html.DisplayNameFor(m => m.DeletedPages.First().HasExistingRevisions)</th>
			<th>Actions</th>
		</tr>
		@foreach (var item in Model.DeletedPages.OrderByDescending(m => m.PageName))
		{
			<tr>
				<td>
					<a condition="!item.HasExistingRevisions" asp-page="/Wiki/RenderDeleted" asp-route-url="@item.PageName">@item.PageName</a>
					<span condition="item.HasExistingRevisions">@item.PageName</span>
				</td>
				<td>@item.RevisionCount</td>
				<td>
					<a condition="@item.HasExistingRevisions" href="/@item.PageName">@item.PageName</a>
				</td>
				<td>
					@if (ViewData.UserHas(PermissionTo.DeleteWikiPages))
					{
						<delete-button condition="@item.HasExistingRevisions"
										asp-href="/Wiki/DeletedPages/Undelete?path=@item.PageName"
										warning-message="This page already exists. Undeleting these revisions will merge them into the history of the existing page. Continue?">
							Undelete
						</delete-button>
						<span condition="!item.HasExistingRevisions">
							<form method="post" asp-page="/Wiki/DeletedPages" asp-page-handler="Undelete">
								<input type="hidden" name="path" value="@item.PageName" />
								<button type="submit" class="btn btn-primary">Undelete</button>
							</form>
						</span>
					}
				</td>
			</tr>
		}
	</table>
</div>
