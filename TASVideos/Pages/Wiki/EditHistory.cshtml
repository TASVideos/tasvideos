@page "{username}"
@model EditHistoryModel

@{
	ViewData["Title"] = "Edit History For User " + Model.UserName;
}
<h4>Edits by <a href="@WikiEngine.Builtins.NormalizeInternalLink("/HomePages/" + Model.UserName)">@Model.UserName</a></h4>
<div id="diff-view" class="d-none">

</div>
<div class="table-container">
	<table class="table table-striped">
		<tbody>
			<tr>
				<th>@Html.DisplayNameFor(m => m.History.Edits.First().PageName)</th>
				<th>@Html.DisplayNameFor(m => m.History.Edits.First().CreateTimestamp)</th>
				<th>@Html.DisplayNameFor(m => m.History.Edits.First().MinorEdit)</th>
				<th>@Html.DisplayNameFor(m => m.History.Edits.First().RevisionMessage)</th>
				<th>Actions</th>
			</tr>
			@foreach (var revision in Model.History.Edits)
			{
				<tr>
					<td><a href="/@(revision.PageName)?revision=@revision.Revision">@revision.PageName r@(revision.Revision)</a></td>
					<td>@revision.CreateTimestamp</td>
					<td>@revision.MinorEdit</td>
					<td>@revision.RevisionMessage</td>
					<td>
						<button class="btn btn-primary" onclick="GetDiff('@revision.PageName', @revision.Revision)">Diff</button>
						<delete-button permission="DeleteWikiPages"
									   asp-href="/Wiki/DeletedPages/DeleteRevision?path=@(revision.PageName)&revision=@revision.Revision"
									   warning-message="Are you sure you want to delete this revision?">
							Delete
						</delete-button>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
<input type="hidden" id="left-revision" />
<input type="hidden" id="right-revision" />
<div id="diff-options" class="d-none">
	<hr />
	<label><input name="diff-type" type="radio" value="1" checked="checked" onclick="generateDiff(1)" /> Inline</label>
	<label><input name="diff-type" type="radio" value="0" onclick="generateDiff(0)" /> Side by Side</label>
</div>

<script>
	let fromRevision, toRevision;

	function GetDiff(path, revision) {
		const baseUrl = '/Wiki/Diff?handler=DiffData';
		const ajaxUrl = baseUrl + '&path=' + path + '&fromRevision=' + (revision - 1) + '&toRevision=' + revision;

		const xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange = function() {
			if (xmlhttp.readyState === XMLHttpRequest.DONE) {
				document.getElementById("diff-view").classList.remove("d-none");
				document.getElementById("diff-options").classList.remove("d-none");
				if (xmlhttp.status === 200) {
					const data = JSON.parse(xmlhttp.responseText);
					document.getElementById("left-revision").value = data.leftMarkup;
					document.getElementById("right-revision").value = data.rightMarkup;
					fromRevision = revision - 1;
					toRevision = revision;
					generateDiff(parseInt(document.querySelector('[name="diff-type"]:checked').value));
				}
			}
		};

		xmlhttp.open("GET", ajaxUrl, true);
		xmlhttp.send();
	}

	function generateDiff(viewType) {
		const diffView = document.getElementById("diff-view");
		const base = difflib.stringAsLines(document.getElementById("left-revision").value),
			newTxt = difflib.stringAsLines(document.getElementById("right-revision").value),
			opcodes = new difflib.SequenceMatcher(base, newTxt).get_opcodes(),
			diffOutputDiv = diffView;

		diffOutputDiv.innerHTML = "";

		diffOutputDiv.appendChild(diffview.buildView({
			baseTextLines: base,
			newTextLines: newTxt,
			opcodes: opcodes,
			baseTextName: "r" + fromRevision,
			newTextName: "r" + toRevision,
			contextSize: 5,
			viewType: viewType
		}));
	}
</script>

@section Scripts {
	<script src="~/js/difflib.js"></script>
	<script src="~/js/diffview.js"></script>
}
