@page "{id}"
@model IndexModel
@{
	ViewData.SetTitle($"Games for Group: {Model.Name}");
	if (int.TryParse(Model.Id, out var id))
	{
		ViewData.SetNavigation(id, "/GameGroups/{0}");
	}
}

<warning-alert condition="!Model.Games.Any()">
	No Games Listed for this Game Group
</warning-alert>
<top-button-bar>
	<label class="heading">Abbreviation: @Model.Abbreviation</label>
	<edit-link asp-page="Edit" asp-route-id="@Model.Id" permission="CatalogMovies"></edit-link>
	<a asp-page="List" class="btn btn-secondary">All Groups</a>
</top-button-bar>
<card condition="!string.IsNullOrWhiteSpace(Model.Description)" class="mb-2">
	<card-header>Description</card-header>
	<card-body><wiki-markup markup="@Model.Description"></wiki-markup></card-body>
</card>
<standard-table condition="Model.Games.Any()">
	<table-head columns="Game,Systems,Publications,Submissions,Resource Page"></table-head>
	@foreach (var game in Model.Games.OrderBy(g => g.Name).ThenBy(g => g.SystemsString()))
	{
		<tr>
			<td><game-link id="game.Id">@game.Name</game-link></td>
			<td>@game.SystemsString()</td>
			<td><a href="/Movies-@(game.Id)G">@game.PubCount</a></td>
			<td><a href="/Subs-List?GameId=@(game.Id)">@game.SubCount</a></td>
			<td><a href="/@game.GameResourcesPage">@game.GameResourcesPage</a></td>
		</tr>
	}
</standard-table>
