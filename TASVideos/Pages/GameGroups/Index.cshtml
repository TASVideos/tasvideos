@page "{id}"
@model IndexModel
@{
	ViewData["Title"] = $"Games for Group: {Model.Name}";
}
<label class="mb-2">Abbreviation: @Model.Abbreviation</label>
<warning-alert condition="!Model.Games.Any()">
	No Games Listed for this Game Group
</warning-alert>
<row>
	<column>
		<a asp-page="List" class="btn btn-secondary mb-3 ms-1 float-end">All Groups</a>
		<a asp-page="Edit" asp-route-id="@Model.Id" class="btn btn-primary mb-3 float-end" permission="CatalogMovies"><i class="fa fa-pencil"></i> Edit</a>
	</column>
</row>
<card condition="!string.IsNullOrWhiteSpace(Model.Description)" class="mb-2">
	<cardheader>Description</cardheader>
	<cardbody>@Model.Description</cardbody>
</card>
<table condition="Model.Games.Any()" class="table table-bordered table-striped">
	<tr>
		<th>Game</th>
		<th>Systems</th>
		<th>Publications</th>
		<th>Submissions</th>
		<th>Resource Page</th>
	</tr>
	@foreach (var game in Model.Games)
	{
		<tr>
			<td>
				<game-link id="game.Id">
					@game.Name
				</game-link>
			</td>
			<td>
				@string.Join(", ", game.Systems.Distinct())
			</td>
			<td>
				<a href="/Movies-@(game.Id)G">
					@game.PublicationCount
				</a>
			</td>
			<td>
				<a href="/Subs-List?GameId=@(game.Id)">
					@game.SubmissionsCount
				</a>
			</td>
			<td>
				<a href="/@game.GameResourcesPage">
					@game.GameResourcesPage
				</a>
			</td>
		</tr>
	}
</table>