@using System.Globalization
@model TASVideos.Pages.RssFeeds.Models.RssPublication
@{
	var baseUrl = ViewData["BaseUrl"];
	var movieUrl = $"{baseUrl}/{Model.Id}M";

	var primaryStreaming = Model.StreamingUrls.FirstOrDefault(u => u.Contains("youtube"));
	var secondaryStreaming = Model.StreamingUrls.Where(u => u != primaryStreaming);
}
<item>
	<title>@Model.Title</title>
	<link>@movieUrl</link>
	<description>
		<html-encode>
			<wiki-markup markup="@Model.Wiki.Markup" page-data="@Model.Wiki"></wiki-markup>
		</html-encode>
	</description>
	@foreach (var tag in Model.TagNames)
	{
		<category>@tag</category>
	}
	<media:group>
		<media:content url="@(movieUrl)?handler=Download" fileSize="@Model.MovieFileSize" type="application/zip" medium="document" />
		<media:thumbnail url="@(baseUrl)/media/@Model.ScreenshotPath" />
		@foreach (var url in secondaryStreaming)
		{
			<media:content url="@url" type="video" medium="video" />
		}
		<media:player url="@primaryStreaming" />
		<media:community>
			<media:starRating average="@Model.RatingAverage" count="@Model.RatingCount" min="@Model.RatingMin" max="@Model.RatingMax" />
		</media:community>
	</media:group>
	<guid>@movieUrl</guid>
	<pubDate>@Model.CreateTimestamp.ToString("u", CultureInfo.InvariantCulture)</pubDate>
</item>