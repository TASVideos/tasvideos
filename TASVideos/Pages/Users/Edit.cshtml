@page "{id}"
@model EditModel
@{
	ViewData["Title"] = $"Editing User: {Model.UserToEdit.UserName}";
}

<h4>@ViewData["Title"]</h4>
<hr />
<div asp-validation-summary="All" class="text-danger"></div>
<form asp-route="Edit">
	<fullrow>
		<form-group condition="Model.UserToEdit.IsLockedOut">
			<label asp-for="UserToEdit.IsLockedOut" class="form-control-label"></label>
			<div>
				<label class="text-danger"><span class="fa fa-exclamation-triangle"></span> This user is currently locked out</label>
				<a class="btn btn-secondary" asp-page="Edit" asp-page-handler="Unlock" asp-route-returnurl="@HttpContext.CurrentPathToReturnUrl()" asp-route-id="@Model.Id">Unlock</a>
			</div>
		</form-group>
		<form-group condition="!Model.UserToEdit.IsLockedOut">
			<label asp-for="UserToEdit.IsLockedOut" class="form-control-label"></label>
			<div>
				<span class="fa fa-check-square text-success"></span> Not locked
			</div>
		</form-group>
	</fullrow>
	<row>
		<div class="col-md-5">
			<form-group>
				<label asp-for="UserToEdit.CreateTimestamp" class="form-control-label"></label>
				<div><timezone-convert asp-for="@Model.UserToEdit.CreateTimestamp"/></div>
			</form-group>
			<form-group>
				<label asp-for="UserToEdit.UserName" class="form-control-label"></label>
				@if (ViewData.UserHas(PermissionTo.EditUsersUserName))
				{
					<input asp-for="UserToEdit.OriginalUserName" type="hidden" />
					<row>
						<div id="user-name-div" class="col-sm-12">
							<div class="input-group">
								<input asp-for="UserToEdit.UserName" class="form-control" autocomplete="off" />
								<div class="input-group-append">
									<div class="input-group-text" aria-hidden="true">
										<span id="user-name-status" class="fa fa-check-square text-success"></span>
									</div>
								</div>
							</div>
							<span id="username-exists-message" class="d-none text-danger">User name already exists</span>
						</div>
						<div>
							<button id="check-username" type="button" class="btn btn-secondary d-none">Check</button>
						</div>
						<script>
						(function() {
							var checkUserBtn = document.getElementById('check-username');
							var userNameBox = document.getElementById('@Html.IdFor(m => m.UserToEdit.UserName)');
							var userNameStatus = document.getElementById('user-name-status');
							var userNameExistsMessage = document.getElementById('username-exists-message');
							var originalUserNameBox = document.getElementById('@Html.IdFor(m => m.UserToEdit.OriginalUserName)');
							var userNameDiv = document.getElementById('user-name-div');

							userNameBox.onkeyup = onUserNameBoxChange;
							userNameBox.onchange = onUserNameBoxChange;

							function onUserNameBoxChange() {
								if (userNameBox.value === originalUserNameBox.value) {
									hideCheckNameBtn();
									markUserNameGood();
								} else {
									showCheckNameBtn();
									markUserNameUnknown();
								}
							}

							function showCheckNameBtn() {
								checkUserBtn.classList.remove('d-none');
								checkUserBtn.parentNode.classList.add('col-sm-2');
								userNameDiv.classList.remove('col-sm-12');
								userNameDiv.classList.add('col-sm-10');
							}

							function hideCheckNameBtn() {
								checkUserBtn.classList.add("div-none");
								checkUserBtn.parentNode.classList.remove('col-sm-2');
								userNameDiv.classList.remove('col-sm-10');
								userNameDiv.classList.add('col-sm-12');
							}

							function markUserNameUnknown() {
								userNameStatus.classList.remove('fa-check-square', 'text-success');
								userNameStatus.classList.remove('fa-exclamation-triangle', 'text-danger');
								userNameStatus.classList.add('fa-question-circle', 'text-primary');
								userNameExistsMessage.classList.add('d-none');
								document.getElementById('submit-btn').disabled = true;
							}

							function markUserNameGood() {
								userNameStatus.classList.add('fa-check-square', 'text-success');
								userNameStatus.classList.remove('fa-exclamation-triangle', 'text-danger');
								userNameStatus.classList.remove('fa-question-circle', 'text-primary');
								userNameExistsMessage.classList.add('d-none');
								document.getElementById('submit-btn').disabled = false;
							}

							function markUserNameBad() {
								userNameStatus.classList.remove('fa-check-square', 'text-success');
								userNameStatus.classList.add('fa-exclamation-triangle', 'text-danger');
								userNameStatus.classList.remove('fa-question-circle', 'text-primary');
								userNameExistsMessage.classList.remove('d-none');
								document.getElementById('submit-btn').disabled = true;
							}

							checkUserBtn.onclick = function() {
								if (originalUserNameBox.value === userNameBox.value) {
									markUserNameGood();
									return;
								}

								fetch(`/Users/List?handler=VerifyUniqueUserName&userName=${userNameBox.value}`)
									.then(handleFetchErrors)
									.then(r => r.text())
									.then(d => {
										if (d === "true") {
											markUserNameBad();
										} else {
											markUserNameGood();
										}
									});
							};
						})();
						</script>
						<span asp-validation-for="UserToEdit.UserName"></span>
					</row>
				}
				else
				{
					<div>
						<label class="form-control-label">@Model.UserToEdit.UserName</label>
						<input type="hidden" asp-for="UserToEdit.UserName" />
					</div>
				}
			</form-group>
			<form-group>
				<label asp-for="UserToEdit.From" class="form-control-label"></label>
				<input asp-for="UserToEdit.From" type="text" class="form-control" />
				<span asp-validation-for="UserToEdit.From" class="text-danger"></span>
			</form-group>
		</div>
		<div class="offset-md-2 col-md-5">
			<form-group>
				<label asp-for="UserToEdit.LastLoggedInTimeStamp" class="form-control-label"></label>
				<div>@Html.DisplayFor(m => m.UserToEdit.LastLoggedInTimeStamp)</div>
			</form-group>
			<form-group>
				<label asp-for="UserToEdit.TimezoneId" class="form-control-label"></label>
				<timezone-picker asp-for="UserToEdit.TimezoneId" class="form-control" />
			</form-group>
			<form-group>
				<label asp-for="UserToEdit.Email" class="form-control-label"></label>
				<div class="input-group">
					<label class="form-control">@Model.UserToEdit.Email</label>
					<div class="input-group-append">
						<span class="input-group-text" aria-hidden="true">
							<i condition="Model.UserToEdit.EmailConfirmed" class="fa fa-check-square text-success"></i>
							<i condition="!Model.UserToEdit.EmailConfirmed" class="fa fa-question text-warning" title="Email not confirmed"></i>
						</span>
					</div>
				</div>
			</form-group>
		</div>
	</row>
	<row>
		<column md="6">
			<form-group>
				<input type="checkbox" class="forum-check-input" asp-for="UserToEdit.UseRatings" />
				<label class="form-check-label" asp-for="UserToEdit.UseRatings"></label>
				<br />
				(@Html.DescriptionFor(m => m.UserToEdit.UseRatings))
			</form-group>
		</column>
	</row>
	<full-row>
		<label asp-for="UserToEdit.ModeratorComments"></label>
		<textarea asp-for="UserToEdit.ModeratorComments" class="form-control" rows="5"></textarea>
	</full-row>
	<two-column-select id-list="UserToEdit.SelectedRoles" available-list="AvailableRoles" />
	@await Component.RenderWiki("System/UserEditRole")
	<hr />
	<row>
		<column md="5">
			<label asp-for="UserToEdit.Avatar" class="form-control-label"></label>
			<input type="text" asp-for="UserToEdit.Avatar" class="form-control" />
		</column>
		<column class="offset-md-2" md="5" show="!string.IsNullOrWhiteSpace(Model.UserToEdit.Avatar)">
			<label class="form-control-label">Preview</label><br />
			<img id="avatar-img" src="@Model.UserToEdit.Avatar" class="float-start m-2"/>
		</column>
	</row>
	<row>
		<column md="5">
			<label asp-for="UserToEdit.MoodAvatarUrlBase"></label>
			<input type="text" asp-for="UserToEdit.MoodAvatarUrlBase" class="form-control" />
		</column>
	</row>
	<hr />
	<fullrow>
		<label asp-for="UserToEdit.Signature" class="form-control-label"></label>
		<textarea asp-for="UserToEdit.Signature" class="form-control" rows="5"></textarea>
	</fullrow>
	<hr />
	<div class="text-center">
		<button id="submit-btn" type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Update</button>
		<a asp-page="List" class="btn btn-secondary"><i class="fa fa-times"></i> Cancel</a>
	</div>
</form>