@page "{id}"
@model EditModel
@{
	ViewData.SetTitle($"Editing User: {Model.UserToEdit.UserName}");
}

<top-button-bar>
	<a condition="User.Has(PermissionTo.SeeEmails) && User.Has(PermissionTo.EditUsers)"
	   asp-page="Nuke"
	   asp-route-id="@Model.Id"
	   class="btn btn-danger"><i class="fa fa-trash-can"></i> Anonymize User</a>
</top-button-bar>

<form asp-route="Edit">
	<row>
		<column md="6">
			<fieldset>
				<label asp-for="UserToEdit.CreateTimestamp"></label>
				<div><timezone-convert asp-for="@Model.UserToEdit.CreateTimestamp"/></div>
			</fieldset>
			<fieldset condition="Model.UserToEdit.IsLockedOut">
				<label asp-for="UserToEdit.IsLockedOut"></label>
				<div>
					<label class="text-danger"><span class="fa fa-exclamation-triangle"></span> This user is currently locked out</label>
					<a class="btn btn-secondary" asp-page="Edit" asp-page-handler="Unlock" asp-route-returnurl="@HttpContext.CurrentPathToReturnUrl()" asp-route-id="@Model.Id">Unlock</a>
				</div>
			</fieldset>
			<fieldset condition="!Model.UserToEdit.IsLockedOut">
				<label asp-for="UserToEdit.IsLockedOut"></label>
				<div>
					<span class="fa fa-check-square text-success"></span> Not locked
				</div>
			</fieldset>
		</column>
		<column md="6">
			<fieldset>
				<label asp-for="UserToEdit.LastLoggedInTimeStamp"></label>
				<div>@Html.DisplayFor(m => m.UserToEdit.LastLoggedInTimeStamp)</div>
			</fieldset>
			<fieldset>
				<input type="checkbox" class="forum-check-input" asp-for="UserToEdit.UseRatings" />
				<label class="form-check-label" asp-for="UserToEdit.UseRatings"></label>
				<br />
				(@Html.DescriptionFor(m => m.UserToEdit.UseRatings))
			</fieldset>
		</column>
	</row>
	<row>
		<column md="6">
			<fieldset>
				<label asp-for="UserToEdit.UserName"></label>
				@if (User.Has(PermissionTo.EditUsersUserName))
				{
					<input asp-for="UserToEdit.OriginalUserName" type="hidden"/>
					<row>
						<div id="user-name-div" class="col-sm-12">
							<div class="input-group">
								<input asp-for="UserToEdit.UserName" class="form-control" autocomplete="off"/>
								<div class="input-group-text" aria-hidden="true">
									<span id="user-name-status" class="fa fa-check-square text-success"></span>
								</div>
							</div>
							<span id="username-exists-message" class="d-none text-danger">Username already exists</span>
						</div>
						<div>
							<button id="check-username" type="button" class="btn btn-secondary d-none">Check</button>
						</div>
						<script>
						(function() {
							const checkUserBtn = document.getElementById('check-username');
							const userNameBox = document.getElementById('@Html.IdFor(m => m.UserToEdit.UserName)');
							const userNameStatus = document.getElementById('user-name-status');
							const userNameExistsMessage = document.getElementById('username-exists-message');
							const originalUserNameBox = document.getElementById('@Html.IdFor(m => m.UserToEdit.OriginalUserName)');
							const userNameDiv = document.getElementById('user-name-div');

							userNameBox.onkeyup = onUserNameBoxChange;
							userNameBox.onchange = onUserNameBoxChange;

							function onUserNameBoxChange() {
								if (userNameBox.value === originalUserNameBox.value) {
									hideCheckNameBtn();
									markUserNameGood();
								} else {
									showCheckNameBtn();
									markUserNameUnknown();
								}
							}

							function showCheckNameBtn() {
								checkUserBtn.classList.remove('d-none');
								checkUserBtn.parentNode.classList.add('col-sm-2');
								userNameDiv.classList.remove('col-sm-12');
								userNameDiv.classList.add('col-sm-10');
							}

							function hideCheckNameBtn() {
								checkUserBtn.classList.add("div-none");
								checkUserBtn.parentNode.classList.remove('col-sm-2');
								userNameDiv.classList.remove('col-sm-10');
								userNameDiv.classList.add('col-sm-12');
							}

							function markUserNameUnknown() {
								userNameStatus.classList.remove('fa-check-square', 'text-success');
								userNameStatus.classList.remove('fa-exclamation-triangle', 'text-danger');
								userNameStatus.classList.add('fa-question-circle', 'text-primary');
								userNameExistsMessage.classList.add('d-none');
								document.getElementById('submit-btn').disabled = true;
							}

							function markUserNameGood() {
								userNameStatus.classList.add('fa-check-square', 'text-success');
								userNameStatus.classList.remove('fa-exclamation-triangle', 'text-danger');
								userNameStatus.classList.remove('fa-question-circle', 'text-primary');
								userNameExistsMessage.classList.add('d-none');
								document.getElementById('submit-btn').disabled = false;
							}

							function markUserNameBad() {
								userNameStatus.classList.remove('fa-check-square', 'text-success');
								userNameStatus.classList.add('fa-exclamation-triangle', 'text-danger');
								userNameStatus.classList.remove('fa-question-circle', 'text-primary');
								userNameExistsMessage.classList.remove('d-none');
								document.getElementById('submit-btn').disabled = true;
							}

							checkUserBtn.onclick = function() {
								if (originalUserNameBox.value === userNameBox.value) {
									markUserNameGood();
									return;
								}

								fetch(`/Users/List?handler=VerifyUniqueUserName&userName=${userNameBox.value}`)
									.then(handleFetchErrors)
									.then(r => r.text())
									.then(d => {
										if (d === "true") {
											markUserNameBad();
										} else {
											markUserNameGood();
										}
									});
							};
						})();
						</script>
						<span asp-validation-for="UserToEdit.UserName"></span>
					</row>
				}
				else
				{
					<div>
						<label>@Model.UserToEdit.UserName</label>
						<input type="hidden" asp-for="UserToEdit.UserName"/>
					</div>
				}
			</fieldset>
			<fieldset>
				<label asp-for="UserToEdit.From"></label>
				<input asp-for="UserToEdit.From" type="text" class="form-control"/>
				<span asp-validation-for="UserToEdit.From" class="text-danger"></span>
			</fieldset>
		</column>
		<column md="6">
			<fieldset>
				<label asp-for="UserToEdit.TimezoneId"></label>
				<timezone-picker asp-for="UserToEdit.TimezoneId" class="form-control" />
			</fieldset>
			<fieldset permission="SeeEmails">
				<label asp-for="UserToEdit.Email"></label>
				<div class="input-group">
					<label class="form-control">@Model.UserToEdit.Email</label>
					<span class="input-group-text" aria-hidden="true">
						<i condition="Model.UserToEdit.EmailConfirmed" class="fa fa-check-square text-success"></i>
						<i condition="!Model.UserToEdit.EmailConfirmed" class="fa fa-question text-warning" title="Email not confirmed"></i>
					</span>
				</div>
				<a asp-page="EditEmail" asp-route-id="@Model.Id" class="btn btn-danger mt-2">Edit</a>
				<label>(also allows manually setting the email confirmed value)</label>
			</fieldset>
		</column>
	</row>
	<row>
		<column md="6">
			<fieldset>
				<label asp-for="UserToEdit.BannedUntil">Banned Until</label>
				<input asp-for="UserToEdit.BannedUntil" class="form-control"/>
			</fieldset>
		</column>
	</row>
	<full-row>
		<label asp-for="UserToEdit.ModeratorComments"></label>
		<textarea asp-for="UserToEdit.ModeratorComments" class="form-control" rows="5"></textarea>
	</full-row>
	<hr />
	<label asp-for="UserToEdit.SelectedRoles"></label>
	<select asp-for="UserToEdit.SelectedRoles" multiselect="true" asp-items="Model.AvailableRoles" class="form-select"></select>
	@await Html.RenderWiki(SystemWiki.UserEditRole)
	<row>
		<column md="6">
			<label asp-for="UserToEdit.Avatar"></label>
			<input type="text" asp-for="UserToEdit.Avatar" class="form-control" />
		</column>
		<column md="6" show="!string.IsNullOrWhiteSpace(Model.UserToEdit.Avatar)">
			<label>Preview</label><br />
			<img id="avatar-img" src="@Model.UserToEdit.Avatar" class="float-start m-2"/>
		</column>
	</row>
	<row>
		<column md="6">
			<label asp-for="UserToEdit.MoodAvatarUrlBase"></label>
			<input type="text" asp-for="UserToEdit.MoodAvatarUrlBase" class="form-control" />
		</column>
	</row>
	<hr />
	<fullrow>
		<label asp-for="UserToEdit.Signature"></label>
		<textarea asp-for="UserToEdit.Signature" class="form-control" rows="5"></textarea>
	</fullrow>
	<form-button-bar class="text-center">
		<submit-button id="submit-btn"></submit-button>
		<cancel-link asp-page="List"></cancel-link>
	</form-button-bar>
</form>
