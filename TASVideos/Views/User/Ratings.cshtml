@model UserRatingsViewModel
@{
	ViewData["Title"] = $"Ratings for {Model.UserName}";
	bool isMyPage = (bool)ViewData["IsMyPage"];
}

<h4>User: <a asp-controller="User" asp-action="Profile" asp-route-userName="@Model.UserName">@Model.UserName</a></h4>
<div condition="isMyPage && !Model.PublicRatings" class="alert alert-warning">
	Your ratings are currently private and will not be visible to others. This can be changed on the <a asp-controller="Profile" asp-action="Settings">Settings Page</a>
</div>
<div condition="!isMyPage && !Model.PublicRatings">
	<div class="alert alert-warning">This user's ratings are private</div>
</div>
<div condition="isMyPage || Model.PublicRatings">
	<label>Current</label>
	<table class="table table-bordered">
		<tr>
			<th>Movie</th>
			<th>Average</th>
			<th>Entertainment</th>
			<th>Tech Qaulity</th>
		</tr>
		@foreach (var rating in Model.Ratings.Where(r => !r.IsObsolete).OrderByDescending(r => r.Average))
		{
			<tr>
				<td>@rating.PublicationTitle</td>
				<td>@(Math.Round(rating.Average, 1))</td>
				<td>@rating.Entertainment</td>
				<td>@rating.Tech</td>
			</tr>
		}
	</table>
	<label>Obsolete</label>
	<table class="table table-bordered">
		<tr>
			<th>Movie</th>
			<th>Average</th>
			<th>Entertainment</th>
			<th>Tech Qaulity</th>
		</tr>
		@foreach (var rating in Model.Ratings.Where(r => r.IsObsolete).OrderByDescending(r => r.Average))
		{
			<tr>
				<td>@rating.PublicationTitle</td>
				<td>@(Math.Round(rating.Average, 1))</td>
				<td>@rating.Entertainment</td>
				<td>@rating.Tech</td>
			</tr>
		}
	</table>
</div>