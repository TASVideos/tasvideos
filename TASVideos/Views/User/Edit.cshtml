@model UserEditViewModel
@{
	ViewData["Title"] = Model.UserName;
}

<h4>@ViewData["Title"]</h4>


<form asp-route="Edit" method="post">
	<row>
		<fieldset class="form-group col-md-5">
			<label asp-for="UserName" class="control-label"></label>
			@if (ViewData.UserHasPermission(PermissionTo.EditUsersUserName))
			{
				<row>
					<div class="col-sm-9">
						<div class="input-group">
							<input asp-for="UserName" class="form-control"/>
							<span class="input-group-addon" aria-hidden="true">
								<span id="user-name-status-good" class="glyphicon glyphicon-ok text-success"></span>
								<span id="user-name-status-bad" class="hide glyphicon glyphicon-alert text-danger"></span>
								<span id="user-name-status-unknown" class="hide glyphicon glyphicon-question-sign text-primary"></span>
							</span>
						</div>
						<span id="username-exists-message" class="hide text-danger">User name already exists</span>
					</div>
					<div class="col-sm-3">
						<button id="check-username" type="button" class="btn btn-default hide">Check</button>
					</div>
					<script>
						(function () {
							// Store username in hidden field on load, check current name against that, if same don't make the call, just green check it'
							// on keypress if username is same as orginal immediately set to green check without them having to click check
							// In addition to examation on fail, disable the update button
							var checkUserBtn = document.getElementById('check-username');
							var userNameBox = document.getElementById('UserName');
							var userNameGoodIcon = document.getElementById('user-name-status-good');
							var userNameBadIcon = document.getElementById('user-name-status-bad');
							var userNameUnknownIcon = document.getElementById('user-name-status-unknown');
							var userNameExistsMessage = document.getElementById('username-exists-message');

							userNameBox.onkeypress = showCheckUserBtn;
							userNameBox.onchange = showCheckUserBtn;

							function showCheckUserBtn() {
								checkUserBtn.classList.remove("hide");
								userNameGoodIcon.classList.add("hide");
								userNameBadIcon.classList.add("hide");
								userNameUnknownIcon.classList.remove("hide");
							}

							checkUserBtn.onclick = function () {
								var xmlhttp = new XMLHttpRequest();

								xmlhttp.onreadystatechange = function () {
									if (xmlhttp.readyState === XMLHttpRequest.DONE) {   // XMLHttpRequest.DONE == 4
										if (xmlhttp.status === 200) {
											if (xmlhttp.responseText === "true") {
												userNameGoodIcon.classList.add("hide");
												userNameBadIcon.classList.remove("hide");
												userNameUnknownIcon.classList.add("hide");
												userNameExistsMessage.classList.remove("hide");
											} else {
												userNameGoodIcon.classList.remove("hide");
												userNameBadIcon.classList.add("hide");
												userNameUnknownIcon.classList.add("hide");
												userNameExistsMessage.classList.add("hide");
											}
										}
									}
								};

								var userName = userNameBox.value;
								xmlhttp.open("GET", "/User/VerifyUserNameIsUnique?userName=" + userName, true);
								xmlhttp.send();
							};
						})();
					</script>
					<span asp-validation-for="UserName"></span>
				</row>
			}
			else
			{
				<label class="form-control">@Model.UserName</label>
			}
		</fieldset>
		<fieldset class="form-group col-md-offset-2 col-md-5">
			<label asp-for="Email" class="control-label"></label>
			@if (Model.EmailConfirmed)
			{
				<div class="input-group">
					<label class="form-control">@Model.Email</label>
					<span class="input-group-addon" aria-hidden="true"><span class="glyphicon glyphicon-ok text-success"></span></span>
				</div>
			}
			else
			{
				<label class="form-control">@Model.Email</label>
			}
		</fieldset>
		@if (Model.IsLockedOut)
		{
			<fieldset class="form-group col-md-5">
				<label class="text-danger col-sm-9"><span class="glyphicon glyphicon-alert"></span> This user is currently locked out</label>
				<div class="col-sm-3">
					<a class="btn btn-default" asp-action="Unlock" asp-route-returnurl="@($"{Context.Request.Path}{Context.Request.QueryString}")" asp-route-id="@Model.Id">Unlock</a>
				</div>
			</fieldset>
		}
	</row>
	@Html.TwoColumnPickerFor(m => m.SelectedRolesStr, n => n.AvailableRoles)
	<hr/>
	<div class="text-center">
		<button type="submit" class="btn btn-primary">Update</button>
		<a asp-action="List" class="btn btn-default">Cancel</a>
	</div>
</form>