@model PageOf<UserListViewModel>
@{
	ViewData["Title"] = "User List";
}
<h4>@ViewData["Title"]</h4>
<hr />
@Html.Partial("~/Views/Table/_Pager.cshtml", Model)
<table class="table table-bordered table-striped">
	<tr>
		<th>
			<a asp-action="List"
				asp-route-CurrentPage="1"
				asp-route-PageSize="@Model.PageSize"
				asp-route-SortDescending="@(Model.SortBy == nameof(UserListViewModel.Id) && !Model.SortDescending)"
				asp-route-SortBy="@nameof(UserListViewModel.Id)">
				@Html.DisplayNameFor(m => m.First().Id)
				<span condition="@(Model.SortBy == nameof(UserListViewModel.Id) && Model.SortDescending)" class="glyphicon glyphicon-arrow-up"></span>
				<span condition="@(Model.SortBy == nameof(UserListViewModel.Id) && !Model.SortDescending)" class="glyphicon glyphicon-arrow-down"></span>
			</a>
		</th>
		<th>
			<a asp-action="List"
				asp-route-CurrentPage="1"
				asp-route-PageSize="@Model.PageSize"
				asp-route-SortDescending="@(Model.SortBy == nameof(UserListViewModel.UserName) && !Model.SortDescending)"
				asp-route-SortBy="@nameof(UserListViewModel.UserName)">
				@Html.DisplayNameFor(m => m.First().UserName)
				<span condition="@(Model.SortBy == nameof(UserListViewModel.UserName) && Model.SortDescending)" class="glyphicon glyphicon-arrow-up"></span>
				<span condition="@(Model.SortBy == nameof(UserListViewModel.UserName) && !Model.SortDescending)" class="glyphicon glyphicon-arrow-down"></span>
			</a>
		</th>
		<th>@Html.DisplayNameFor(m => m.First().Roles)</th>
		<th>Actions</th>
	</tr>
	@foreach (var user in Model)
	{
		<tr>
			<td>@user.Id</td>
			<td>@user.UserName</td>
			<td>@string.Join(",", user.Roles)</td>
			<td>
				<a asp-action="Index" asp-route-id="@user.Id" class="btn btn-default">View</a>
				<a condition="@ViewData.UserHasPermission(PermissionTo.EditUsers)" asp-action="Edit" asp-route-id="@user.Id" class="btn btn-primary">Edit</a>
			</td>
		</tr>
	}
</table>