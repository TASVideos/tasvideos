@model PageOf<UserListViewModel>
@{
	ViewData["Title"] = "User List";
}
<h4>@ViewData["Title"]</h4>

<row>
	<div class="col-sm-3 pull-left" condition="@Model.LastPage > 1">
		<a disable="@Model.CurrentPage == 1" asp-action="List" asp-route-CurrentPage="1" asp-route-PageSize="@Model.PageSize" class="btn btn-default btn-xs" title="First Page">
			<span class="glyphicon glyphicon-fast-backward"></span>
		</a>
		<a disable="@Model.CurrentPage == 1" asp-action="List" asp-route-CurrentPage="@(Model.CurrentPage - 1)" asp-route-PageSize="@Model.PageSize" class="btn btn-default btn-xs" title="Previous Page">
			<span class="glyphicon glyphicon-chevron-left"></span>
		</a>
		<a disable="@Model.CurrentPage == Model.LastPage" asp-action="List" asp-route-CurrentPage="@(Model.CurrentPage + 1)" asp-route-PageSize="@Model.PageSize" class="btn btn-default btn-xs" role="button" title="Next Page">
			<span class="glyphicon glyphicon-chevron-right"></span>
		</a>
		<a disable="@Model.CurrentPage == Model.LastPage" asp-action="List" asp-route-CurrentPage="@Model.LastPage" asp-route-PageSize="@Model.PageSize" class="btn btn-default btn-xs" role="button" title="Last Page">
			<span class="glyphicon glyphicon-fast-forward"></span>
		</a>
	</div>
	<div class="@(Model.LastPage > 1 ? "col-sm-4 text-right" : "text-center")">
		<label>Showing @Model.StartRow - @Model.LastRow of @Model.RowCount</label>
	</div>
	<div class="col-sm-5 text-right" condition="@Model.LastPage > 1">
		<form method="GET" asp-action="List">
			@Html.HiddenFor(m => m.PageSize)
			<label>Page <input type="number" asp-for="CurrentPage" min="1" max="@Model.LastPage" class="input-sm" style="height: 23px; padding: 2px 5px; max-width: 65px;"> Of @Model.LastPage</label>
			<button type="submit" class="btn btn-default btn-xs">Go To</button>
		</form>
	</div>
</row>
<table class="table table-bordered table-striped">
	<tr>
		<th>@Html.DisplayNameFor(m => m.First().Id)</th>
		<th>@Html.DisplayNameFor(m => m.First().UserName)</th>
		<th>@Html.DisplayNameFor(m => m.First().Roles)</th>
		<th>Actions</th>
	</tr>
	@foreach (var user in Model)
	{
		<tr>
			<td>@user.Id</td>
			<td>@user.UserName</td>
			<td>@string.Join(",", user.Roles)</td>
			<td>
				<a asp-action="Index" asp-route-id="@user.Id" class="btn btn-default">View</a>
				<a condition="@ViewData.UserHasPermission(PermissionTo.EditUsers)" asp-action="Edit" asp-route-id="@user.Id" class="btn btn-primary">Edit</a>
			</td>
		</tr>
	}
</table>