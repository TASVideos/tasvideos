@model PublicationRatingsViewModel
@{
	ViewData["Title"] = $"Ratings for #{Model.PublicationTitle}";

	var visibleRatings = ViewData.UserHasPermission(PermissionTo.SeePrivateRatings)
		? Model.Ratings
		: Model.Ratings.Where(r => r.IsPublic);
}
@section PageTitle {
	<h1>Rating Details for @Model.PublicationTitle</h1>
}

@if (Model.Ratings.Any())
{
	<label>@Model.Ratings.Count() total ratings</label>
	<table class="table table-striped table-bordered">
		<tr>
			<th>@Html.DisplayNameFor(m => m.Ratings.First().UserName)</th>
			<th>@Html.DisplayNameFor(m => m.Ratings.First().Entertainment)</th>
			<th>@Html.DisplayNameFor(m => m.Ratings.First().TechQuality)</th>
		</tr>
		@foreach (var ratings in visibleRatings.OrderBy(r => r.UserName))
		{
			<tr>
				<td>@(ratings.IsPublic ? "" : "*") @ratings.UserName</td>
				<td>@ratings.Entertainment</td>
				<td>@ratings.TechQuality</td>
			</tr>
		}
		<tfoot>
			<tr>
				<th>Average</th>
				<td>@Math.Round(Model.Ratings.Where(r => r.Entertainment.HasValue).Select(r => r.Entertainment.Value).Average(), 2)</td>
				<td>@Math.Round(Model.Ratings.Where(r => r.TechQuality.HasValue).Select(r => r.TechQuality.Value).Average(), 2)</td>
			</tr>
		</tfoot>
	</table>
}
else
{
	<div class="alert alert-warning">No Ratings</div>
}

