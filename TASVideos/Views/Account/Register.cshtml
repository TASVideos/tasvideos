@model RegisterViewModel
@{
	// ReSharper disable CoercedEqualsUsing
	ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"]</h2>

<row>
	<div class="col-md-4">
		<form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
			<h4>Create a new account.</h4>
			<hr />
			<div asp-validation-summary="All" class="text-danger"></div>
			<form-group>
				<label asp-for="UserName"></label>
				<input asp-for="UserName" class="form-control" />
				<span asp-validation-for="UserName" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="Email"></label>
				<input asp-for="Email" class="form-control" />
				<span asp-validation-for="Email" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="SelectedTimeZone"></label>
				<timezone-picker asp-for="SelectedTimeZone" class="form-control" />
			</form-group>
			<form-group>
				<label asp-for="Password"></label>
				<input asp-for="Password" class="form-control" />
				<span asp-validation-for="Password" class="text-danger"></span>
			</form-group>
			<form-group>
				<label asp-for="ConfirmPassword"></label>
				<input asp-for="ConfirmPassword" class="form-control" />
				<span asp-validation-for="ConfirmPassword" class="text-danger"></span>
			</form-group>
			<button type="submit" class="btn btn-secondary">Register</button>
		</form>
	</div>
</row>

<script>
	(function () {
		var selected = document
			.querySelector('#@nameof(Model.SelectedTimeZone) optgroup option:checked');
		selected.removeAttribute('selected');

		var timezoneOffset = 0 - new Date().getTimezoneOffset();
		var timezone = document
			.querySelectorAll('#@nameof(Model.SelectedTimeZone) optgroup option')
			.toArray()
			.filter(function (option) {
				return option.getAttribute('data-offset') == timezoneOffset;
			})[0];

		timezone.setAttribute('selected', 'selected');
	})();
</script>
@section Scripts {
	@await Html.PartialAsync("_ValidationScriptsPartial")
}
