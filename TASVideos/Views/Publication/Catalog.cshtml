@model PublicationCatalogModel
@{
	ViewData["Title"] = $"Set Catalogging Information for Movie #{Model.Id}";
}

<danger-alert asp-validation-summary="ModelOnly"></danger-alert>
<form asp-action="Catalog">
	<row>
		<div class="col-lg-6">
			<form-group>
				<label asp-for="SystemId" class="form-control-label"></label>
				<select asp-for="SystemId" asp-items="@Model.AvailableSystems" class="form-control"></select>
			</form-group>
			<form-group>
				<label asp-for="SystemFrameRateId" class="form-control-label"></label>
				<select asp-for="SystemFrameRateId" asp-items="@Model.AvailableSystemFrameRates" class="form-control"></select>
			</form-group>
		</div>
		<div class="col-lg-6">
			<form-group>
				<row>
					<div class="col-12">
						<label asp-for="GameId" class="form-control-label"></label>
					</div>
				</row>
				<row>
					<div class="col-10">
						<select asp-for="GameId" asp-items="@Model.AvailableGames" class="form-control"></select>
					</div>
					<div class="col-2">
						<a asp-controller="Catalog" asp-action="GameEdit" class="btn btn-primary">New</a>
					</div>
				</row>
			</form-group>
			<form-group>
				<row>
					<div class="col-12">
						<label asp-for="RomId" class="form-control-label"></label>
					</div>
				</row>
				<row>
					<div class="col-10">
						<select asp-for="RomId" asp-items="@Model.AvailableRoms" class="form-control"></select>
					</div>
					<div class="col-2">
						<button id="create-rom" type="button" class="btn btn-primary" )>New</button>
					</div>
				</row>
			</form-group>
		</div>
	</row>
	<hr/>
	<row>
		<div class="text-center col-12">
			<button id="submit-btn" type="submit" class="btn btn-primary">Update</button>
			<a class="btn btn-secondary" asp-action="View" asp-route-id="@Model.Id">Cancel</a>
		</div>
	</row>
</form>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}

<script>
	(function () {
		var systemModel = document.getElementById('@nameof(Model.SystemId)');
		var frameRateModel = document.getElementById('@nameof(Model.SystemFrameRateId)');
		var gameModel = document.getElementById('@nameof(Model.GameId)');
		var romModel = document.getElementById('@nameof(Model.RomId)');
		var createRomBtn = document.getElementById('create-rom');

		systemModel.onchange = function() {
			if (this.value) {
				var xmlhttp = new XMLHttpRequest();
				xmlhttp.onreadystatechange = function() {
					if (xmlhttp.readyState === XMLHttpRequest.DONE) {
						if (xmlhttp.status === 200) {
							gameModel.innerHTML = xmlhttp.responseText;
						}
					}
				};

				xmlhttp.open("GET", "/Catalog/@(nameof(CatalogController.GameDropDownForSystem))?includeEmpty=false&systemId=" + systemModel.value, true);
				xmlhttp.send();

				var xmlhttp2 = new XMLHttpRequest();
				xmlhttp2.onreadystatechange = function() {
					if (xmlhttp2.readyState === XMLHttpRequest.DONE) {
						if (xmlhttp2.status === 200) {
							frameRateModel.innerHTML = xmlhttp2.responseText;
						}
					}
				};

				xmlhttp2.open("GET", "/Catalog/@(nameof(CatalogController.FrameRateDropDownForSystem))?includeEmpty=false&systemId=" + systemModel.value, true);
				xmlhttp2.send();
			} else {
				document.querySelectorAll('#@nameof(Model.GameId) option')
					.toArray()
					.forEach(function (elem) {
						if (elem.value) {
							elem.remove();
						}
					});

				document.querySelectorAll('#@nameof(Model.SystemFrameRateId) option')
					.toArray()
					.forEach(function (elem) {
						if (elem.value) {
							elem.remove();
						}
					});
			}

			document.querySelectorAll('#@nameof(Model.RomId) option')
					.toArray()
					.forEach(function (elem) {
						if (elem.value) {
							elem.remove();
						}
					});
		}

		gameModel.onchange = function () {
			if (this.value) {
				createRomBtn.removeAttribute('disabled');

				var xmlhttp = new XMLHttpRequest();
				xmlhttp.onreadystatechange = function() {
					if (xmlhttp.readyState === XMLHttpRequest.DONE) {
						if (xmlhttp.status === 200) {
							romModel.innerHTML = xmlhttp.responseText;
						}
					}
				};

				xmlhttp.open("GET", "/Catalog/@(nameof(CatalogController.RomDropDownForGame))?includeEmpty=false&gameId=" + gameModel.value, true);
				xmlhttp.send();
			} else {
				createRomBtn.setAttribute('disabled', 'disabled');
				document.querySelectorAll('#@nameof(Model.RomId) option')
					.toArray()
					.forEach(function (elem) {
						if (elem.value) {
							elem.remove();
						}
					});
			}
		}

		document.getElementById('create-rom').onclick = function () {
			var baseUrl = '@Url.Action(nameof(CatalogController.RomEdit), "Catalog")';
			var gameId = document.getElementById('@nameof(Model.GameId)').value;
			document.location = baseUrl + '?gameId=' + gameId;
		}
	})()
</script>