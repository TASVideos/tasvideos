@model ProfileIndexViewModel
@{
    ViewData["Title"] = "Profile";
    ViewData.AddActivePage(ProfileNavPages.Index);
}

<h4>@ViewData["Title"]</h4>
@Html.Partial("_StatusMessage", Model.StatusMessage)
<row>
	<div class="col-md-6">
		<form method="post">
			<div asp-validation-summary="All" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="Username"></label>
				<input asp-for="Username" class="form-control" disabled />
			</div>
			<div class="form-group">
				<label asp-for="Email"></label>
				@if (Model.IsEmailConfirmed)
				{
					<div class="input-group">
						<input asp-for="Email" class="form-control" />
						<span class="input-group-addon" aria-hidden="true"><span class="glyphicon glyphicon-ok text-success"></span></span>
					</div>
				}
				else
				{
					<input asp-for="Email" class="form-control" />
					<button asp-action="SendVerificationEmail" class="btn btn-link">Send verification email</button>
				}
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>
			<button type="submit" class="btn btn-default">Save</button>
		</form>
	</div>
</row>
@if (Model.Roles.Any())
{
	<hr />
	<h4>Roles</h4>
	<span>Your account has the following <a asp-controller="Roles">Roles</a>:</span>
	foreach (var role in Model.Roles)
	{
		<br />
		<br />
		<label>@role.Name</label>
		<br />
		@role.Description
	}
}
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
