@model IEnumerable<SubmissionListViewModel>
@{
	ViewData["Title"] = "Submission List";
}

<h4>This page list movies that have been submitted for review</h4>

@if (ViewData.UserHasPermission(PermissionTo.SubmitMovies))
{
	<a class="btn btn-primary" asp-action="Submit">Submit a Movie</a>
	<a asp-action="List" asp-route-user="@User.Identity.Name" class="btn btn-secondary">My Submissions</a>
}
else
{
	<h4>Want to submit a movie?</h4>
	<p>TODO: submission instructions wiki go here (instead of on SubmitMovie when a user is not logged in!)</p>
}

<label>TODO: more content</label>

<table class="table table-striped table-bordered">
	<tr>
		<th>@Html.DisplayNameFor(m => m.First().Title)</th>
		<th>@Html.DisplayNameFor(m => m.First().Author)</th>
		<th>@Html.DisplayNameFor(m => m.First().Submitted)</th>
		<th>@Html.DisplayNameFor(m => m.First().Status)</th>
	</tr>
	@foreach (var item in Model)
	{
		<tr>
			<td><a href="/@(item.Id)S">@item.Title</a></td>
			<td>@item.Author</td>
			<td>@item.Submitted</td>
			<td>@item.Status</td>
		</tr>
	}
</table>