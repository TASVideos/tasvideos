@model RoleEditViewModel
@{
	ViewData["Title"] = Model.Id.HasValue ? "Modifying Role: " + Model.Name : "Create a New Role";
}

@if (Model.Id.HasValue && ViewData.UserHasPermission(PermissionTo.DeleteRoles))
{
	<delete-button asp-href="@Url.Action($"Delete/{Model.Id}")" class="pull-right text-center">Delete</delete-button>
}
<h4>@ViewData["Title"]</h4>
<hr />
<div class="container">
	<form asp-route="Edit" method="post" class="form-horizontal">
		<input type="hidden" asp-for="@Model.Id" />
		<row>
			<div class="col-sm-5">
				<fieldset class="form-group">
					<label asp-for="@Model.Name" class="control-label col-md-3"></label>
					<div class="col-md-9">
						<input asp-for="@Model.Name" class="form-control" maxlength="50" />
						<span asp-validation-for="@Model.Name" class="text-danger"></span>
					</div>
				</fieldset>
			</div>
			<div class="col-sm-offset-2 col-sm-5">
				<fieldset class="form-group">
					<label asp-for="@Model.Description" class="control-label col-md-3"></label>
					<div class="col-md-9">
						<textarea asp-for="@Model.Description" class="form-control" rows="3" maxlength="200"></textarea>
						<span asp-validation-for="@Model.Description" class="text-danger"></span>
					</div>
				</fieldset>
			</div>
		</row>
		@Html.TwoColumnPickerFor(m => m.SelectedPermissionsStr, n => n.AvailablePermissions)
		<row class="text-center mt-el">
			<button type="submit" class="text-center btn btn-primary">@(Model.Id.HasValue ? "Update" : "Save")</button>
			<a asp-action="Index" class="btn btn-default">Cancel</a>
		</row>
	</form>
</div>

@section Scripts {
	@await Html.PartialAsync("_ValidationScriptsPartial")
}
