@model IEnumerable<RoleDisplayViewModel>
@{
	ViewData["Title"] = "Role List";
}

<h4>@ViewData["Title"]</h4>
<p>These are a list of the site roles</p>
<hr />
@if (User.Identity.IsAuthenticated)
{
	<p>See the <a asp-controller="Permissions" asp-action="Index">Permission List</a> for details on individual permissions</p>
}

@foreach (var role in Model)
{
	<div class="card">
		<div class="card-body p-3">
			<h5 class="card-title">@role.Name</h5>
			<row>
				<div class="col-md-6">
					<div condition="@ViewData.UserHasPermission(PermissionTo.EditRoles)">
						<a asp-action="AddEdit" asp-route-id="@role.Id" class="btn btn-primary mb-m">Edit</a>
					</div>
					@role.Description
				</div>
				<div class="col-lg-3 col-md-6">
					<strong>@Html.DisplayNameFor(m => m.First().Permissions):</strong><br/>
					@foreach (var permission in role.Permissions)
					{
						<div class="ml-md-0 ml-sm-4">@permission</div>
					}
				</div>
				<div condition="@role.Links.Any()" class="col-lg-3 col-md-12">
					<strong>@Html.DisplayNameFor(m => m.First().Links):</strong><br/>
					@foreach (var link in role.Links)
					{
						<div class="ml-lg-0 ml-sm-4"><a href="/@link">@link</a></div>

					}
				</div>
			</row>
		</div>
	</div>
}

<a asp-action="AddEdit" class="mt-2 btn btn-primary">Create New Role</a>

@section Scripts {
	@await Html.PartialAsync("_ValidationScriptsPartial")
}
